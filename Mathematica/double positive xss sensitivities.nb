(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 13.3' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    189630,       4059]
NotebookOptionsPosition[    183419,       3947]
NotebookOutlinePosition[    183874,       3965]
CellTagsIndexPosition[    183831,       3962]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["\<\
Double positive feedback loop sensitivity function of x steady state (xss)\
\>", "Title",
 CellChangeTimes->{{3.922490491285777*^9, 3.922490508257596*^9}, {
  3.9225533099286222`*^9, 
  3.922553317972571*^9}},ExpressionUUID->"fd71f539-8e10-4828-88cc-\
f34dcb481165"],

Cell[TextData[{
 StyleBox["CONTEXT: \nWE HAVE",
  FontWeight->"Bold"],
 "\n",
 Cell[BoxData[
  GraphicsBox[
   TagBox[RasterBox[CompressedData["
1:eJzs3WmUdVdVPnrvvf8P9+P94Bh+ctgNcKiIgihIEyD0JKFJgIQuIaETiSGC
SiMSGyIKIiL8bYGAggFEg3RiGxFsiAq2oKgE7BX7vj/X374+GdN196m3ap96
T9Wpms8Y+z1vnWZ3a+215nzmM+f6lCueduGT/s+P+7iPe8b//V//XHj5M+/5
9Kdf/uyL/p//+uPhVz3jKU++6olPeMBVX/bEJz/x6Xe64v/6rzf/1//xcR93
5//1X6//9f+//du/Xf3Lv/zLqtFoNBqNRqPRaDQajUZj19E8R6PRaDQajUaj
0Wg0Go2TguY5Go1Go9FoNBqNRqPRaJwUNM/RaDQajUaj0Wg0Go1G46SgeY5G
o9FoNBqNRqPRaDQaJwXNczQajUaj0Wg0Go1Go9E4KWieo9FoNBqNRqPRaDQa
jcZJQfMcjUaj0Wg0Go1Go9FoNE4KmudoNBqNRqPRaDQajUajcVLQPEej0Wg0
Go1Go9FoNBqNk4LmORqNRqPRaDQajUaj0WicFDTP0Wg0Go2jxn/+539O237x
H//xH9M2t5/D2H+j0dhdeNaND//+7/8+vR50XMjvs/XY0Wg0GruH5jkajUaj
cVSIP/Fv//Zvk0+ylz+Rz3z/H//xH1f/9E//9D++H79m3Ie/zXO29ld2E/FH
D7o1toc8y0d93x3feGJ8+Lu/+7tprPDsz/GixotxzPA93/+Hf/iH1d///d9P
v//Xf/3XbV5Co9FoNA4BzXM0Go1G46gw8hw1hpotvkj8kfAc//zP//w/fFq+
yByXke/bjtoHayzDGF/f79Y4HLj/eQbXcRnHgedwfsYBYwOego3rNTxHHW/C
Zdgq1+Fz+6g8h+83Go1GY7fQPEej0Wg0jhrV/+BjhLPgr0S7UWOyNV4fHyxc
hv9X+A2fpXmO3UXzHEeLPF+eQ8/mmbRXRwHn4/zCXWTMMKakL0Srgb/4y7/8
y9Wf/umfrj72sY9N363jRu1vrQ1qNBqN3UTzHI1Go9E4DghfEY6D7xHuIvqN
OR8rOvXEX/1/1KHH92l/ZTexjufQF9gxf/VXf3XL9td//ddTX2me4/DgPnu2
PEPubeUORuQ5jkZrW3Dc8KLhN6I/MW7IYcFr3HzzzasPfOADq/e9732rm266
afWLv/iLq9/8zd9cffSjH50+1598v17fyHs0Go1G4/ijeY5Go9FoHCfwTcxL
leOwhcfwGi6j6kDy+eijtJ5j91H9TP1De/7Jn/zJ6vd///dXP/IjP7L6/u//
/lu2G264YfWrv/qrE0/WOByE57BF07HO5/fd5I1s075M7pqtnlfO/fd+7/dW
v/zLv7y68cYbV29961tXb3jDG1ave93rVtdff/3qh37oh1Y/+ZM/ufqlX/ql
ie8I1xFkjNlPHaFGo9FoHA80z9FoNBqNo8JcHcAaD+Yv8VH+/M//fPJpP/Sh
D60++MEPTj7LX/zFX0w+V2LLybmP5qPuz35Sz6Oxe4gPqw+Ix//Mz/zM6ru/
+7tX3/Zt37b6oi/6otUll1xyy/aYxzxm9Q3f8A1TH2kcDqKZqhqJdTU6khdC
V4Pr2CZqvlK4Mfkpv/u7v7t697vfvXrTm9409Zlv/MZvXF1zzTWrr/zKr1w9
5znPmV6998pXvnL1Yz/2Y9MYY3wJZxLuNTqRHkcajUbj+KN5jkaj0WgcBeIT
zeUYxK81R4nb05X/7M/+7Optb3vbFK9/z3ves/qt3/qtW7iO/CYa9XAd8Xvi
o7V/spvQdjiul770pZM/+sxnPvN/cBvjdsUVV6x+9Ed/tNfJOEuYW3c1W3gO
OURej+Lcst4KrkW/+emf/unV933f961e/OIXT33nqU996uryyy9fXXrppatH
PvKRq4suumj1uMc9bvrsFa94xepd73rXxJNFA5b9JXeux5FGo9E4/mieo9Fo
NBpHAb5Cck3GPH5/i8N++MMfnvLn3/KWt6z+9//+31Ps9cu//MunWD6duc//
5m/+5pbfpc4g/8R+ay2B9k12E/oCXxW/8ehHP3pPfiOb7+kr+k63++GDr8/v
T63Pcb2SaLGOgmdyTGOC/JP3v//9U17T93zP96y+6Zu+afXsZz979ZSnPGXi
NPAbj3jEI1YPetCDVve4xz1W55133vS+fma8+e3f/u2ppkdypVIzqGu/NBqN
xm6geY5Go9FoHAX4RbgIvkTlOVJ74dd//ddXP/VTPzXVXBCH/ZIv+ZLV+eef
P/kjX/d1Xzfl1NOX40OCup5CdPNjvY7G7kC7yTnge8pH2Q/Hke1Rj3rU5Nf2
mqCHh9TBkUf2h3/4h6s/+IM/WP3xH//x9Aymbk44xeiptgXHwkP82Z/92aT1
ouF44xvfuPrO7/zO1Qtf+MLV13zN10z5KV/xFV+xuvrqq1df/MVfvHriE584
8R33ve99p7EFP2Zskd9iH+E5KnfjGD2eNBqNxvFH8xyNRqPROArwhaK7qH4D
/+kXfuEXppgq3cYLXvCCySd5wAMesLr1rW+9+szP/MzJV/mBH/iB1W/8xm9M
uStB5Tmim6/r0TZ2C3zK1772tZMvehCOI5t+07krh4Pwkn/0R3808Yu0Mu99
73snzQS9DW4yXMdRwHGtl/Jrv/Zrk4ZDrY2v/dqvnXQ98lHwHPgyuU8veclL
buE+vvRLv3TixPQxuSzXXnvtxHPQc9TaxXU9lx5PGo1G4/ijeY5Go9FoHAXi
N/Bls4YGP0UdDrn03/It3zL5KV/1VV+1uuqqq6Z4/rnnnrt64AMfuPrWb/3W
KYf+Ix/5yDSP1X2mHmnWhTiKNS4bhwM+pZyDkb/gk6rBoc6CPAR+avMcZx80
Ur/zO78z1YG1Zgmt1Q/+4A+u3vnOd06cBw0EjQe9h+9uc80bz7yaGsYP66jg
R6+88srV0572tInrUH8UfyHfDQ/y5je/eXXddddN33vyk5+8uuyyy6bNePOa
17xm0pMZWyqnoS913kqj0WjsBprnaDQajcZRILVGU0PjYx/72LQe6Otf//pJ
Oy7OykeRe0Bvntz6L/uyL5vqka6rQzqu4ZLaiF0/cPewjufImipvf/vbJ10P
zqN5jrMPzxsN1Tve8Y6pXiddxDd/8zdPHILn1lolN9100+oDH/jAlG+E79jW
M+cZV68Hj/Ht3/7tk4ZDHooxg25DP7FurDwb/Gh0H9/xHd8x5bGozYEve8Yz
nrF6+ctfPl2H86/8aDjTHkcajUbj+KN5jkaj0WgcBcJzJHclPgpduTjs4x//
+OmVP8unEou9/vrrp3wWPpRag1nnMXUCa93RwP8do2rQG7uBdTwHn5SOQNvy
vfEZzXOcfajDIWdFbRx6q+c+97lTXWB6CTkh8szUxMCD/MRP/MS0TtK2tA+e
f+sOq8uBu5DbhrfAleJjrNFEa0I3ZuyQH+c952xt4gsvvHB1//vff+pbeBHr
9dCH1P6TNWUajUajcfzBtuwYV6PRaDQ2QXiGkWMIkk+SLbUK8RL8VFp4HAef
g26c38E/ef7znz9p0G+88cZJRy6WjA/h/9Z9O7592aqWA1Kf0NZz3ebYj6+X
74xrj2qbverC5jtpw+Y5jhfwAzhGeSo0HNdcc82kf6CHoLfyvOI/1P6UE4Ir
uPnmmyd+ZGz3PLN1zEifWfKc2o8apOqGyDt53vOeN9XbwMNYq0nNH5qxaL7Y
v3QnuFOcqvo/1l2xBovf4FV9PtbjqP260Wg0GscX1S5t+6/RaDQaS8BnoPHm
B83xCfwKaxf4PPy6ecd76v3dcMMNU13AJz3pSdO6KvJUaDjoyunLxVX5s1lD
Zay1Eb96nQ/efsl6VE5iP/zFmWqdZF+pk5KcofiW6sPO6Uizb+2bepZeN+E5
6IGa5zg8aA95H/I/5I6p9Wm9VnyHZ5auA09JDxHOA9+hdgeuo7Z76vHQFWc8
0EeMH0tqmUa3hQeVz0QXJvfNefk/HlW+Sjg0r8Yjazqpy3Hve997dZ/73GfS
gOA5Xv3qV69+/ud/fupf9bwdBz/TWuhGo9E43jC3xGZpnqPRaDQaS8Bn4Q9k
fZM6n1T/Fa/hO8lVUWMDl6GuKJ05f4OPwT/64R/+4Um/IUbrd83LHz5qbDrr
gOb+1vomlbvg4+3FHdQ6KdHvZN/anW8Z3U22WjtWv8h6wJvwHI997GOnOH7X
nz08aBO8BI0GfYRn1Ho47vOLXvSiqa7OV3/1V09aCps6wvJZ1MawLou8kqwj
rQ/gLTMeRI+1lOcId2E9GPqv7/qu71o961nPmngXNUTk0lgXJhrm1O2h/8Ct
XnDBBVPeysUXXzzVPVbjAwdiHZlaT7XW+2k0Go3G8UXzHI1Go9HYFPyTuTzI
+B7xd/kHfBq+krgwPwnHIQ4sT0XNwK//+q+f1lvhR/FZen2Ds4eaJ6J9tF+0
F+E7wn14n7+HezhTLHudPeEY9hGfNn5tOLDwYFkrZ47nsNYK3Q+/dS+ewxoa
+k/j8IGf+OhHPzpxF+pw4DHoNl72spdNuix8B40HzsP/1fVUp/Tnfu7npt9V
LlQfiNYrfOYmz7vcFOvBOB9aDnwLzYmaInLf9K3sXz/HpTpPtW3PO++81UUX
XbR6whOeMHGt6qqq46EfVjTX2mg0GscfzXM0Go1GY1PUuguZS6LhqDn4vsOP
VQ9QHFUc2PopOA7rI1x77bVTPQ5rQ8pV8d2en84eKg8VjiO5JuNWeQl/j7/b
jy1R18NJX+DfymVJTlP2b5PXoI9U/sIaGnzo1LhsnmP70DbaC1dJIyGPhYYC
l4CjlM+ifgcdhfwVPAJth7od9Ft5tkGfwntqR/vc9HnXl/Av1rxVw9i6sfJW
nJv1nBwrehHHkedCuyHHiabj/PPPnzQd+Fb5L6ldmu83x9FoNBq7geY5Go1G
o7Ep5uz/6NLpNzLH8I+8p+bGm9/85knHIVeFj4HjELu3BgI/iG8x1rPseepw
MeptKtcRTiNbahJULmT8fKxDW3NYxjqUvsvX1R/UbuB/6iuxS/xffQQ1Fip/
cemll07+cvpE8xxnH3PPYJ5n7Sa3Qy1h/MK73/3uqU4pXkGNC/oOuWjaIzVB
6TrwB36f9U9S32dT7Zbzwb3gU/AXtCTqG9P/GHf0t6pHotfAidB+PPjBD55q
dNB10IG4Brk24Tl6HGo0Go3dQfMcjUaj0dgU8ZXrPJKYb9Wo8xf4FbTuNO50
HE984hMnn4JPRMdB1x5uhE8Rfzo+cPsZh4fwHLUmR3y55BlVOyGfeb/WWgnH
MdaB9Ruf8y3VWan6/7r+Sj1G+pL9W0N45C+a59g+0o7JJwoXUWu2aC9cBV5A
bWH5IGp/0naoS6qNtAlu03oo+ExjgfZLX7KfTZ9t54lDuemmm6YaLjgMfIWx
xVoxjlX1HDgavAzdCZ7j7ne/++rcc8+danv4vXNMfY5eV7bRaDR2B81zNBqN
RmNTpHZDrfmYmHz1KcTt5chby1H8VP0/61LiPMRfcRz8kLoPvrEYrS3H6Pnq
cLCXDr/mmIzfiRajchzV9029Snkn4vzyBay5oe6s9+QWZN2c8djxne1bnQU5
D/xjdTnUH1XX0lofZ+I5rE3cPMfhIGvlJA/tTO2G3/Ssf/CDH5x0FGqCake8
ps3/1c+g/cA94MHG8WMpcHCOjWuhB8Jv4DxoPPS9nH/OGf+m3qgaHhdeeOHq
nHPOmTbj0hvf+MaJtxnXsW40Go3G8UfzHI1Go9HYFHyUGieFcZ1XPoXYKJ9C
jT9+KF9CDr2Y6y//8i/fouPI75PnkvoN4U16vjo8LIlRh8uI7TDqeLQZfoOf
qcaBmg1yB9SrfNe73jXxHmLu2nPMc4meI2uM8kPf9KY3rV784hdPaw1nbeG9
eA41JfEh/N3G5oieY9R0jP1m1ASpCaqt6Tpwm2peXH311asrrrhiWl9JDgsu
Sxsf1jqt6Tf6hfw3PAW+K+v8jHwd7sM5qIeMS6PlwHPgY9QKsrZMaok0Go1G
Y3fQPEej0Wg0NgW/Qvx+XG8F4iPRh6s9yt9Rk9CaGepJ8l3lsfCLq98cPXzi
yHv5V43lWMdzhHNIG6Qd4uvWuHi+r23kLqgRqk35ibQ6akFqa9yDmgk33HDD
xIHgOvBj8YvDn4ztXH3ncZvjOeRC4c0ah4M8j3M5TFX3M+ZA6St4BJqNPPvW
X7n88sun519uCO6Lzkc/GLnRJecZnizcqy3rFI+1P3xP/1FXRC6NOkEPechD
phod1n7SV9/3vvdNfE2j0Wg0dgvNczQajUZjUyQ/f86X8Bk/gb8g311cXiyX
H2E9BvVIrdcg5lq1H6mDGd1A4/CxV95KjYvT4di0Eb81a2Nkzd/4uv7m0/74
j//46lWvetVUW1ZbX3XVVZMPaXv605++eslLXjL1hV/5lV+Z+K/YIqkJMmp2
9uI5aH3kQDXPsV1UTqGuyzPHg2hf2hrcFl0PLZc6K/gOmg61OvSruqbx0vPZ
rz2b7+vHclzUgsG/yo2y7grNCX7uR3/0RydNR9vIjUajsVtonqPRaDQam6LW
k6zziVc+sZoccg/wGmK4fN/nPve5t6whyzfmr2ZfWe8j65f2/HR2UOuQjhCL
t26oGgv8U7UU5Jz89E//9KTz/4Vf+IVJt0GTgcfKmhvWF806G/gHmzqUL3rR
i6ZYvtoM4uT4LdxX1rNIW8+dz148By7mx37sxyYuBcfxqEc9alqr2Lk1zi7S
LtF6jGsRh6/yHf3Jc443wHVaRxrfoU9YZ0kf0xfCnS05lxx33XgxrhuTmrpy
ofTF7/3e753Gp/BlcmzozdSWSV5e5VMajUajcXzRPEej0Wg0DgPRttdYvFc5
8nxfHId6HGpK4jn8zT/lG8t1yJoGqWkaLce4fkfX5zg81Dob4/vi77gCvAbt
xWtf+9pJo2H9DDUk+aZqb+CprNdJP6H2Cu5KzRU81rOf/ezp/3xFa17Yh5qU
b3jDG6a2p+fQP+Q8xb+tuQu1Vsc6niM+tDUzHBOPgkPhuzYOB/XZHuvSjmsH
h2tIfdp8x2eec5ynvvDSl750Gg+sNYvreP3rXz9xDfKjlnAI4bxsczxJXUMo
dXNrPRF8HR4PB0PLYe0VnJn+pJ/Tm6SeTNYhajQajcbxRfMcjUaj0TgMzPEc
fAK+shx83Aat+qMf/ehpbUkxf74xHQe/Ib6JeWlcqzT75wPRmdd6p43lSH5Q
vZ95T56KODaO49u+7dsmvkKNDVyCmDfNBM0GzkO9DdwCHiOaHfF6eQDqHuBK
xOqtNfpzP/dzU60G/u6HP/zhqQblWF82Pimdx5gfM7exYXwXZ2afOI4lmoDG
PDyTnlNbOKlRt1W32jZQ67zQ/egH+oy8Jmsu0XXQ+9B6aO+lPEdqpY42bfq0
469bt0mfkb+iP6v3cr/73W91//vffzo3nJ5+5bc5zmGsgdtoNBqNs4dam2mT
bZzjTsq29F4swVFf69m+j7VO2dneoqHdxlZjXAfdljw7mzyn22yDpdsuXNvS
dtv2vUzfPOi29J5A/ZsvkDUb+cnqceA5vKrPYB1ZfgU9uN8EqfXBp/Ba1y01
Z43f9//U8rCN8do6xtb3omWwz6yROvr7NRfnJG61tkKtjeBvtTjkElgrRZ2C
r/qqr5r4KTkodBraUa0NvAcf1Ro61ubEhYjT4zi+8zu/c4qR33zzzVMb8ZPH
Oh/as+YnpZ2yRqnPo+056Ni81D7ZZhts04ZaOg5pOzwADsKzUp/JveapPGuV
u/S80XXoW7RB+DJ1OvQtfU1fydrS6Qd13eLRZso9DJcRDqaeW67BOeT863ei
BaFhojPC6V188cWrBz7wgavHPvax0/iFl/N5jhNudkkbLB2bl4zlJ91G39Yz
t8kcvs02yLi+jX6y9J5s2qd76+1MW/qoMTuc9BLf8Cj66TaPt/SeZG4/KM+x
rblv21t06Im17HeL33LQLbbMtraDXlfsvaXP0BI+hk22yf3cxhYfdcm1VT/3
bF9b/OiDbpu0wdJr41McZFvadq6vjmXGT7Ud1BcVz+cLP+EJT5jipM9//vMn
jYCYrpwFvm/9vf2Zm8R9bf7v3Oq9rGOs7/OX1YjgP2Xd0bEmasbYqhvhT/G5
adYdq64f6bvhWrb1DGwy7i3pz/FXs15OzR1xP7WfmgXPe97zJj9UfoEcFJoN
HIc2tYartTOsw0mzIw/B9vKXv3zKJUnNhfSLuXHvTPNwfNQl13ZQzjT3Y1vt
vTTWtMQecqwl97LyTAc5Xp41Y1+e4difN99889Q/9Cn9SC0Ma7uq/YIL8538
Ls9zRdoqc+lB7Lp17zmmGiJvfetbJ/4F16FOh1yWm266aeJtq622xK6s13S2
t/SvJfPVNn2SpfEN93JpX17iD2wyDm1rC5e4pJ9s655k25Z90tvp2uozl3kn
c8Y2t6Xc7XE/3iZczLbbYJvbNsf5bWk5NuX8tnn/l/bLbW9LnoNtX9vSZ/Uo
2mBb3LXrG3UQH/3oR6dYvvUV+Mli/LQA8lXUdMAr4CTGfHr7M1fxu6Mxjy+Y
uLD3cRo4ig996EPTupDqYsqzkBPxq7/6q1O+DF/Kd/jsWfc2x/LKThajTqza
3/U6sn7qUT8XZ7sv+/9Y89U9cy/lovBFaTq+4zu+Y/JNxbz5gvgO/qn1TcJ1
4LToOtQ00Abue31mlsYMl/bLJcfbZhssOcdNbJRN+slBt/Sl9K/6nOtf6rPg
0VKfliZIvWLPMQ4UV4rDxD+mvuhc39jkHvp9xhgwFljn9o1vfOPE1dnk0xhH
2MyOtYmeI1zftuySTdruuG+7MC5s27Zf0r+OYqzclp3d2+nb6jPn7zrvNDZH
bOfoJ/e7aYtGo9HYdZhjcBF83Le97W2Tn8CHkcfAT07t0THHP6j2U/3cq/3y
e3Ao9CBirD/xEz8x1YZQ25Lu/frrr5/qgTj2T/7kT076eP7URz7ykclfst+6
z6rdq/NhPjvpc2Rs1hH8UPfXPf3Gb/zGaf1P91XNUfoXPNM73vGO1dd//ddP
NQwuu+yyKZdFO1933XVT7ZXKcbS9cbhY4hdu+5jByEcAzgDXaR0fXBotB97M
eIHroOvwjOMXwnPU+P+66znoOeqXyWUJ/N8YpS6qjb4kcHznjhs5ijZYgl05
z21im/fjsHidbrdGY3/I8xA7s3F4iI2+ZGs0Go1dRPwY4x/7XxxW7Un1Gfi9
6jnQfvNf+Mn03+t8lTqG5nP7Nl+p6WCd0xtvvHFas0HMlU/NN1Ijgs+ttiG/
XA0QvAr9CO7jx3/8xyffBU9SOY0cb/SfTgPPUWPZY1u412qGunfi7OLu7jvf
FN/E76TLUbtALUl1DKxTYR1Za6rwD8NzpP2WaKPnuLD9Iu16UA39NpF+tq1t
yb1ceo65l7iE6NuTG+U9fQ//qB/h0+iA1K81Vni2cZQ4huQK1pyPka9c0tbp
l7Rc9hl4X76anDmb866f6dfhTI97/1p6X3Zh2+a4sO1nZxfuyV58Y6NxVKjP
nLE9daeT576NbRMd3jaPt/RYef6XaM221QYnedu2vq3brbfTvqWeAZ9BnB+X
YZ1INR34wPIZxGvVHs06otWuynNU66xUP8bf+AkcB42G9Q/41/gNMWD8htwY
63yoDcFXkj8hT8Zn6grKn8F1ODcx4qzjkee31mSoNS+iUT+JG9/Ofc29iOZC
m+Cq8Bw0HO4dzYw8Fv5fYiVyhXymfa2jY7vqqqsmnsm9VpvD/Uy+0dIaA0vb
YGldqKN4dg66pX7uQTa/WXIvk/O/5HiuL+skhTeoeSj6080337z64R/+4Ymb
tO60cePbv/3bJ16NdihjRGqF6rP2bR/hUJbWsAif4fzGPhBbsNYgcO5qCslv
yTUeZNtm/6q1Vw/abtvcNsnDX3JfloxFS4+39NlZui3tX363zbG5t97O1pY5
x2b+yJxj3DZ3HHTLvHXQLWuUHWRbeqwlx8tcetDN3Jdn/yCbNtjk+o77tuRe
Lu1f2oDtctBtyZzid9t+drZ5L5cea9vbtq/tqJ+n/VwbvuGg29L74bepA2oN
FXyGNUfV8HvYwx42raeA58BR8J+zjkqtG+y5tQ9aD681ZusZs19+D427fatn
6lUMmJZDjr81QWhHbHQFNj6T+pjXXHPNxIt8//d//6Q1kYNPs+C49u+YtAo4
EK/OY5N7su2+teRYrl8OEFvA9aZdtIk4Oh6D/ym2Lt8IR6St4nfKLXBP1ejA
cWhrdUnVm6WlkZPgGNU/dJyDbkvbQZsu2bbZ3nl2Drq5L+7tQbal99JvDnos
m2ddP/Jqw3vpb171hfCc+i9NB25DTVI1bmk6cGV+nziQPpT9uAfhGlKrJ8/t
kv7lfB3Ls2Bf3os96Dvez2cZo5YcK+PktrYl/SR9ZZvbkmdgk3FhW+PQ0mdn
6ba0fy25J5u0wTbtk95O16Zf5nmwHrhX47hX4/dBt8xfB91SS/+g27aPtc17
0tvhtJ0+vsRPWMq9xZ7b1ra0T27reetrO7y+vO2xa+n45ZieA36AfAUadJqK
+9///qvzzz9/4jnksPCL2UeJh4qhJs7r9/wXG3+jagx8psbGW97ylskXotOQ
D/Oyl71sWpsS93HddddN+RLqSHjfxleSx4LvyFogtAb0IDgT+pCsteLa+WDm
RVp671d/7bj3kyXHco2uVzw9vqP7ju/QTqlRgK+g5cA1aTufaz/cB65JXY5H
POIRq4c85CHTGhV81Ze+9KW3+Kn0O+GSTuq93PZ5Ln3Gl57jkmN5ntQJzvNE
y6Wv6Vf2if/yfOM0PYvWYcJV0mLRYKmx47vRXbBh9VP7cw/8rb/6v31XTuUg
916/9Fv92/k6ZsYFW67D587fe56Pbd3Ho9h25RnYhe2o2/I4tveunGdvu7ml
vxi3je3GeGO6sfygm7nloFts2SXbNo/ntwe9H2zGD3zgA1Pc6yCb2OLS+7kL
25L7n/jJQTd9fFvxBL/zLG2rLy/pk4mfLb2fmzyv23jm/Gbb17ak3Zae49Jt
m2Nl7H4+AJ9YTonalHe7291W55133qRFxy1YpzR8u+cmMZpwJNZ0NIZqV+9H
Zx9tAV2BPBW+kHwUa9Za1+M973nPdFzchbUR1Me0HojaErgP3IZ1ImkOsrbt
6173uuk36qWmHzm+sZif473Y0tt8BrbZlzNn5b7bT9amseEy3AN+pc090lbe
83t+KZ2MGqQPfvCDVxdccMHEc2hvOo/kHYTHWuqbaP8l99Fvl/hO2xz3PAfb
5DmWXFt0DAfd9Cn8pOcpWgn9KM8c7iu5Y/qHdVbU0wk/6XlXzzZztH0YY+zD
940R+mg40iV+UHgOv4/t9uu//uvTuWdcxG9Yw8n77ObYGEv6s2vYpt3leMfd
l1zKRy4dF5Zc47afnaXbkrl/6bOz9J7Ytmmf9Ha6tjrm6Z/mGbYkO2QbfmHV
my3RVW37eAe9J8beJeOM9tj0nh7nban+aGneSuz0g2xLcl0Sp1yqrVrKrSzR
Wx73vJWlz9zSa1t6fUvHoqX9eRfyVvI88A3kpqhbeeWVV05+7+Mf//gpp0Qu
i8/FcOObpP6f58h+Yj9p1+St0Ky7f9ZewF/QhdifXH61SPEf4bz4QPwQsWHf
V8fQcXEaeJFLL7108sHV8uBP/dRP/dTkw0TXGF/KeBx/3zlu8znYdl+Ort3c
5e+xbknaJ+vvZoyVL6A9cE4Pf/jDV/e5z31WD3zgAyctBx5Jvov2yG/dV/tf
Ms4uGWOd55Jx3W+2OfYtzbNcMsdFO7XkXvrtQY+nX3m+PE+u06YPRCtV13o2
LnjfGj95XtV+wVeqE4MvwUFGy+G3qYfrdel9cV3RNLORY4vVdnH98asTG/Sb
JW3gd9vKWUn/2pY9tO3NtW2rLy99dpb2k6Xbkv7lPKPj29ZY2XkrvZ2trT5z
/pYfnTlmW2PTJjV2tnm8pbZH7MGDbEvGmKNog6XHWlprqtYD3O+27bpIS+rI
pS7Vtto79c8Oui2tD7ZJXb0l/WtJX1l6nkvbbWl/Xtpu26wHl7UQ+DT8W/oJ
NRvwCvxgnIK4rDkHb5Gc+vpbx0+tDONhXWvb33xmdTX4QDTtNCPWlKVFyHNv
f3UM5jfhO/AZdB1PfOITJz0HXfyrXvWqSW/Ab/L9nEN+q83i62/zOdikzTd5
5tw3/896GHM1zFMjwfFA3op7+aAHPWh1zjnnTHlK+C1tI9/F/rW3V23hvh60
pn9dq+Og93HJ+i5+s82xT/9asq7C0prZS2uzLqnvrV/hLbW760w92jzjef6D
1DHWr+i28KV4TXlwdFr6FD4z+5tbB/qg5+iY+n5ssZzTuC5u+n6+5/9L7skm
NVOXjOfu05K+ss01QpZuS8eFJfdk6bOT3MttbUv6l/Pc9li5Tfukt9O11Weu
1nnLc7ytbekzfNyPtfR427z3R3H/l85jS9fo3fa25Nq23d7buq5NtiV9LP1r
W9e29DnYZn/edrtlPVnabnU+1c+QJ6KeoHqUNB7ipOzLrGmeWG7WhHRfwxtm
HbDAXCWe+v73v3/ScKg9qk7Hu971rkkPN9pdmef4ImKz9Og33HDDtB6LuiH0
BtZJlbfCDwvfn32EKz2q+7nNNh99G/tat1bguNau+ht4LDkreI773ve+k16G
1oaWhj8Y25v/qh2zVstBtiXXl+vY1vE2aeul53nc76VnKWur1H4aziNjR+UT
fOY593ziObJeEn5TrVKai4wPYz9dco72U9d4Wrffeu6xpZfcl22PJ9vuX8e9
Ly+9J0vH2V14vjc5z6OYH3vrba+t9mXjtPcyvyzd35Jt6fO07eMtuSdLOYRt
+UBHsW0bS9p72+e39F4u6ZPbvr4lWPrMbbt/LW27XWiDpXBtYrf05eqCpubn
V3/1V0+8B/4DrxHwFRIPzX3JfQ3PkLkJ6rqy8lDwHDQDeA7x3fjS/I9oEsA+
vEdLcOONN65e8IIXTPVLrc+idge/iQbd7+u11DH5pLfb+Azl+uPPJf5Zv+Nv
8Xh1IvEc1lk599xzV/e+971Xj3rUo6b2tx6tPAP9IlqZ8FzbHJuP8zyw9Bw3
2bZ5juvG8/pcpQ9W/lh+Gw7NM04vhDPFa9JleZbzbPqd76dvLj3HcC6B9+ra
hPptvQ8ZH467nbH0nuzKtu17sittsAv3pNE4W6j9M7ak/y/1zzfhW7bl421y
rIPej9jvSzTtR82Bna1tl/zQbc4pS/vzUg7tuGPpOFTt023gJHNNS+H68BC0
5WL5T33qUycthzjsO9/5zik3xBgXVL+33huv0WTEjwBzlTxgeTFyVfAU1lOh
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
sPYKzuM+97nP6l73ute0JgtdCM4Df+JzmzwX79GCeJUTE04lfAo+Sr5L5TmS
N5HaEFXXsJ8cjpFrqLqjg97HJVqOsdZG1UTsxa3U3x2Ex6kcQt32qvuRe5Jr
nOOP6vVU3mlT4BxxXLhJ+iE8GN0YTq1yXo1Go9FoVDTP0Wg0Go1Nwc8V0xd3
/5Iv+ZKJ67Aeh/g7XcRhIlxGuIfq5/CrHE/+A77iVa961eSXy+3Hc9AM4Dn8
Lb+GH57amTQIuA9czetf//qpLgCfXdx4rHVo3sQDOJatxq13ieeI38onxVXV
c8Yd4KjUffzu7/7uqT3l+sgZUDeh1lutuRapjaLt8UbWANYfcBnqtlx66aWT
v4rDUOfjnve85+qOd7zjlOfy+Z//+au73e1u0/v4DfyKOD7OzBq1eBfcUuU5
Uk8l6+ys83tzfsnBiOZAHgyuSh+22c82a8iu04/McRB124U6t4cBXMZNN900
5a7oO/oEDk2/xIE0z9FoNBqNOTTP0Wg0Go1NwR+23qj6nnIOcAY0EtGWHyb4
d9HLj7FrPqHj0XNYZ0UdCD46X9smDsxnVp8j9Tr44F/8xV88vfKp6eLV8/A7
tST41+9+97unfBZ+cWLmqYU66jnCG+xCzQD+ctY4GXN0nL/3f+/3fm/1a7/2
a9Mmh4DGxfu1Rkb0FDV3Av/j++985zunuh1qlcofwjXJH9JPrNdC00HnoeYH
zkNeC39WTRBr09KOaAOckxowjlO1Bcmv2E/t18op1Bov2cecJqTmpczpHqJ5
2KS9z1R3dKyFkTySvfY3/qY+M3vdkzmNSzacED2NPmDTxvqP+5Y6Jutqwx70
fqQN9DXPM45Nn9BvPLtve9vbpjWm67WeFu6n0Wg0GmdG8xyNRqPR2BRqc9BP
0JbjDPgjckb4yPyUw0Q0A3N+ZWpIWidEHg3u5R3veMe0toq8FP4y7sP/5WPg
M5yzPBYcB60HP/yaa66ZtB1eaVTkaNgXXUddbzb5HlXXn5yCXfC5+K7uFVug
aiSc+1wtybq+aNVvRA9R683atEVyiLSBPoE7wiG59+4vbU2txYEjwzXhN+hq
1CKlFeJX19qw41ofS3NNxpqbI8dR+Y2sHVz9+tStdR5L8lb2s2bsqD2xhZOZ
q6nhu9pUm9C/aGNcpFe/zTqw2V+0Sb5LP5Hvh8/Q79XZ+eAHPzjxh3g/G+6J
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
umvn6HnHrZmjcGo4eX2reY5Go7HLqJq8detyhb8wDorlGPfM11lPq+pRE9MY
55ejrJN+FGie4+xgk7yV1H/LOns27VQ1TLFJPQtsbLZL1vlM/DLnsWnstHEy
kBh1bFZ/e+VXqDlA74/n4LuoC4irsI6jz42r/I6sFZjafPwTudHi6GK3/D8+
Dz/T+BtuLvWhD6suQ+P4gZ5czgJ/Vw0X/q5+IJ8jPEcQDcFc/Hg/iD6DZsj+
+XQ0RWqRPvnJT576I/8O54br4NeFK856K/p16jRED5d959xic6g9wleUo+U4
8nLoEtSdMPZWPzz9fNuoPEe9njmMuSrJQzGX0AFEo1HXPcFteLbdA/oM7ev/
+Ayb/7vvuI3UphRnx4XiNIwV+gh+qeaSJHZVtbp1nNiLF63zZuUOKhex12/3
4jk2qdO9bm6fW4tmrzpyZzqG+4aXwgupP0IHY+zWVjQ1NHa0VeH/vO+ZxC1p
h7ruWvrueD7hOdybufOs11Zr+ld75bCQPq4/eeblQOE5XBPevdFoNHYVGUPH
NcIrd2F+YvMY6+XLsr+ztlw01FXPMceVNM/ROAws4Tdic+mr+Dl+Ii0425Ad
U/Op9V/2DduGDS5+Q0fsbzZkbdP4FM1znG7UsTLjHnvemCn/nW8i/sd+jO4/
HPFYXy+2Or+IzSnOze8TU+fziOHql3W9gpHr6PV+ThbMs2L+YqzWdlUrQ53I
aB1GbMJzhA82Vjoubu7BD37w6u53v/vqnHPOWV144YUT54GPkMciv8J3aw2L
uiZb9YW9bwzFjRiHjb9i4fxEOpVHPepRk//oWaFxMjZnv1kv1fVue6ytuTk1
jjN3Hq7Rs5l8nNSUxG3gc2g0cBbycmgzvIbH4FviMtQNTV2Nuu6S/bjf/E5t
4z5mTZvkw4z1L85U+7NiL16jaisy3tR5c9zfOn3FUr1Z3decDmRc6ybnu0Tz
kPFbH3XP5RMae3GM1h26+OKLVxdddNH0LNj833ueTW1Fq8OGyLqvNW+ncmRz
eo6KzA3pe+Gs5uzrTWFfzlf/kjuZ+rT+j29sNBqNXcZe8W/2BR9P/NEYzgYx
N8v99J75NutpjXXC69jdPEfjMLCE50jMHL9B1ys2ym7EYdCEJ7fcJvbGjhRz
Z5vKbfZ/sTh2JZsj9kXVdHS+QKMiPIe+xl7k34jf4orZwMG6eCifTj+UryBW
SNMvXwHngf+ocdtwHWcjztc4eshTMgapvWBtHjwH/4NuYh3PcdB1o4Lo7I2D
6jjQIt3vfvdb3fGOd1zd4Q53WN373vdePeABD1g98IEPnOwA58EO4BPGB4te
w7npp7QdOJnkaPEd8X80G2oeys2iFREf5++zM3CB9pfzMZ/aV97bJqpGpsbT
584j60jjInFT6sfigzzD6oVmnSWb9WvUC/VZ+Az5J3QacnnUBbXGCb2GtnAP
jR3uRXjNqpcI7zlynwfxidfxEyOPMOa57Hf+qzbiuhpDc9zMulqmc2u0Hoae
wz3VX+US6Z/3ute9Vve4xz1W97nPfVYPe9jDJk7uEY94xOr888+fOMC73OUu
q/POO2+yjz2r4bLrNYcjq/ci/MVePEe4pdqmh2FvjNyUfo2X80x7DvVN+ZV4
m0aj0ThJGHkO473cT7Xx2NqPecxjpnmaDS7WzSZKjGNdDm3X52gcBpbwHPxB
diIt0vXXXz/ZleJlbFB5tTiQ2LBsVHaKHFVcHo2wfu57sV3meI7YaI3TidHm
DM/BbxGjZTOKC1aeI/b73L5SF06/E7una6eRfvrTnz71T302ax7U2kqb5G03
jif0Iz6vPiR/SW6DsUv/mKvPGN9oST+IdgGnK46Lo8NzfOEXfuHqTne60+Tn
nXvuudP/H/vYx06+unGST+83+qN+idvAw6hFEU0DXoPfZPz1TNAx8CEvv/zy
ib+xL5/jTaqWv9ZRSoz8KFC1r3P313OL73H+5gz2UupqyHVwvTQ5+A7zz3XX
XTflr7Ct8CJiRp7rcd2WdRqM1JD3G30k9VHwIdoiNVJqDsVhYW7u24/fnZy+
ysvU/Ltap3TkLkZuZF3d23Vam4Ncm3Ni29Ia6f8f//Efv7rVrW41aZouu+yy
6TmkaXroQx86PQu3ve1tp2cE96fWCr2odgnCadT+6zjRaqybB0Z+Z51+Zgmy
ryA8h7HFs+ja2T9iPI1Go3ESkTwUPIc8czaPuMt973vfKZc2dfHMrbX++dy6
Val3elp8/9N0rdvEEp6DzS2OyKbUh+mF8XVi7OLtbMTYW2Jn7BS6TZt4pvgG
joTOmh0/x3N0HP30Inxw1bT7m98iRosTZv/qS8ZL76+LsyaG5/fJFZQXLvcl
cW9+ER8mayVEt57jN89xsiDfH9/FP37a05428Rz4Wj71YfMcNb9PHBcncckl
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
pXtUY3M9fzQajV1GrTma8Sxjf+wVYyIfTu6hsdw8Ir5uDqFxY2dX3WFiH7GJ
ThPGOqQ1V36MedWa4OZXvzX3JG81tmv9vv1E94kXYM+wS9mN7AFtZM5nG7Nl
6nw9xqaOAuOxY0fpX+wGnAEdB66BfYbf+LzP+7yJp2Bb4SHEvdnI7C18W/qi
2h3qOYr/8AH8nx1Nl3HrW996datb3Wran32I77hXYhni4+woeiU2Cw4Fh+Ec
rDOrHql+7zvykdlgeA62gfiWfbAD2VvaJrrQuTr0Z4p7NnYH2jl17WJz+7/3
PJ/6g/9HB501GeOTiJ3jOsQh5TyxkfVFsXvPsv6of+FB8Br6rdi3V3F9eib+
Ll2IGGjVgVdNemN3YRzBncrjMN6ow2z84/PxLeNLpd2XImOTWLe+pP/Rzxlb
8ctyqPC7ifWHb681o/a7bqfPXY8x1rXwxdVWdVzPB55DXB63h+PAOasFOWrk
jjOOQs8RH9Z9ci/xBamz8lmf9VlTrqZ5kubAfZ7rL9oy64TFx9XHjFXmZ/yX
8Uef0C7mxdStDN9bbZpRazZqhXP+zhl/YQxkAxj3jG90Pl7xwDgVek78ruuL
dpgmwVzObpADZY43d5vH9S3cIO7YvD3W13TsWkMp3EzGTu85jvE8+gzfMbbH
9qJpxsfYv7/FnPwm4359Ho5SzwF5zlODxNyjTXHs7CfPYV3f6yjPtdFoNA4D
qU1UcwbDx4fnMNbjr3HpOF/+JvtHTLzyHDW3M/PHacvxq+uHZE2xmg9ZkTmT
L5S6V+Zv8zY/PfUgEluJDeN+s3Hpi/lH/CL+uTmd/pAdg6cXg5iL2WxiU22C
zJ01xuE+RSvNVhDDptGgpZBfguOQS2JdFNqO5HPjOOg0xBvloLCH5a+wx9ld
7ovYU2y8T/iET5i4Dn+zf9hF7jNOhM0txwVfoT/zIei02VVscbEathJbgK7D
Z+wvvoDf5F6nXsJc7fpdsc8b+0d0+BknvaaGIp0F/sH/s8Zw7On0i/gUnmf9
x3OA72OL05an3r++jP+gv2a/8z/5gPqj5559rd86pt+z41svdDKgDfkk2tbY
JkaNd8UD6FupF27sOYy5NvWRzCG4ZHO9vD9aElx6rSuUPp/xbl3sd86fpw0x
X9Fs8GE9K/gc86XxVL0jnI65gK6PL+Zad8Xn2ibPkRhIXrWFWhX879RZoefA
c9DopNaU8WhEcutqnCv9SxuZo82z9BJiCMYka6/on8ay2IHhOUat8Fj33v5j
09AGG8/0B3M0fkO743nNw46X+vdsUbZSzkt/wZmxBcREnKP5GT/s++IatArR
WgTRQsWfj6Yjtqw+h7Pwm8zpjpkaNanXxY6g6fR/9yF1RcY1kY6yPkfg2pw3
PoP94h7hq9wjfYYeOPHN5KU1Go3GriL6tXDY4Xsrz5G1ZdkmbC0cB/9y5Dnq
fOvvrO9xmjDqOfay/zK/87f5+exI/rYNz556D+bOaITZIHJh+UGpUWEeZ/+m
Zgo/XLuwA8Z4wlEiNVyiOY3N43r4c+KV/Dj62s///M9ffe7nfu706m/2S9ZF
kWvM/hVPYm/JW5FHjgfx/8S75cuqr/GZn/mZq0/6pE+auBI+Iq0pX5IdkrVh
2WpihjQbfEp2FBuADxmNh1ocXn3P/RWLZ0/GLoyNpN/XWmrVZmycHFRdr+fc
s8xHo/mRQ8VG15e85xmutnTW3ama6eSH+65nQh+14TzxF8YF/ZTdzyYVo8TF
8UHFOfVd3AhbflxvsbGbiEbIWMMf4csZ8/h1+kZ4Dn7YYcy18WnphPiK+Gbj
Kp5XX06/qhr4dfq0fKfW342WyfhpnHYMcWTXl3GSv8ifxi/jtY35+rnrrT7q
ccNSbmNTniPHzqt7bizie5u7cBvmUO0o1xPPIaaS+vE5tv9HKxpfv3In2sh8
yNYQa6DpwIWJrdD6sBFj76zjOXJ+OWZ0bewZfdq8ra3ZMOF46TfEPzLPux5j
qzmapsK4aEwM/+K8jIfsVWMxXZxNvk7qc9S+mdyrXH/qjUZ7UuuMxK71fjRM
0fBl7Zes14sHCeccHOV6K/UcnBeelC3EpnHfaVRpqcw/7o9rdE2nLfe80Wic
LER7nXyTkecAfxv78ObGwvibeA52tXmxxnjym/h4pwmpT1LtwNEWjN0gzquG
hPyKaNRpEGgFaDfpCsz1bAB8h+/zd8zf7A3fYyPK5c86OOxgXBTfnV3IZl2n
6dg0f6XmYVTUuiRj3kxsn9Te13dcD//NuctVob9QS0PNUBpUMUW2jXiOvhfN
LE5HnIet5dp9VyxHzVE2kTgW+05NDjkrbHYxRDYZPxJHQaeJt2AneaUF8Tnf
MrXbtYV7KnbF15A7Tp+aOiC5RtfDvpRPZP/4q/Ag4XaOGul/Z1ozoH5vXMdj
Xc5NbLi6hupxuOZtgH3r+dR3cI+eSZoLz7Q+JkaWeLsx0XOZ2veVB41fqx/5
Tep/uK/6kripuKfnn38hDuc4+jXeg1+DnwvXMaJy0fWYh+VvNQ4Ptb4kzhp3
ZrzD8epjePCM74eRtxK/znjF/zGnZM1MPqT5qNajOdO6xVXvUdc8Nj6wG3DO
/G5+rfE0YyR/2rUa1433OG79W7/3jNX91zl2nGu2XYfqqDiOuWPrD+Yhfj6O
SmzK5p5qx9QJqmN2cphTHzR5yPh6c502ookwT5uD5XSyAfH/OApzpe/gqcRt
zOtsF9pT9mP6StVyZg15fIaxy77EO+iV+Nz6gjGPfeS45nRzvTHPnI2PYzvw
1fVXWicbLsd4aR/OSw4P+1VOieuueRl1ndVcf+aw3IfRdqu28fgMhD/xbIYz
Cc5GzYsz9Z+cd87V9Zhb6FjdO3YNbaBnLvVLYp+1nqPRaOw6xjUD6liev41z
xj5zDt86MRa+J66d7z1y9nVtsdNkN9f6XtV2DP8fu8K8zyfiP7M92K60DOZq
c734BduOXWsO4ruYs218cbmoOA62AZuAP+X7NJ/mLr4Vm4O/NHJNtX024erD
W9S86fhp5sjESfJ+cplSg0S/YauLQ7tmNu3tbne71Sd+4ieuPu3TPu2W2mnu
Tfw5cSQxG/Yxzk3cz/X7nJ4lWhA6DvVGbfJe8CZ4DveTbobNzBZyb72XWDjd
Jk7J+YuHsevkqvge+4sW1u/5kanHkfimuBSbzL3nJ9DbsPPEzuzvOKCug7SO
i0hbxfatOpX045EfS71i7comrvlbJxk1Lqlf48b0EbajtYL0S5yEvp7nMPfW
/QrnV/0x+3IPcYCJEea54nPoZ2x2fJtnwFjAlxFnpWFi8+u3jjmea/zOmlNV
12Y5bfzUcUbGymiFaPzoeIx/xiSaCH0k7bdJuyUuYUzDqeB2ze93uctdJh2c
fmXe4TtGi59xZD8+1riGKY2TazDf8V+Nx/q88/CZ+cwx8dVyFPGGOH/8c46X
nANjzVhX8zBzeY476jMcnzu+NhtDn0m9bmOEuEp0Ob6vPaNHSB5e5nbtjbcw
L9qXcUWND/OwtqPJ0R/FHdSTZYPQ4cg1Mh/7zPG1b/iFaitEzyHeI1cKd2FO
Z+/wueVQaWMxA/MqTsy4iu9gL8l7YjuwDfAbrhP/Yl/RaoRviPapavBSbyb9
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
Qa0JFY4iGoyMc/bLJtJP9I/oOdgPYiLiHKnRi2+v4+x+8jUzLs7VKqpj7bhO
1rYxd+9qrdHEn+o9d974DJop85I4Ex7c3BTOq+7XfrKmXKPRaOwaxppMsVnm
xu7YvsZJPActB00H24e2FV9fOd+R5zgN9QiDkecY60x6n83Kn3bv+I60g+6r
OWi8/3xONq05nK0SDTGbgl9TMc7hc/7MUfEc4gJsZ/EeHIdYDP9YnVCcmb9x
N2woPjbOwjwsXsPOVpPUd2hu8RzsHfvDF/Ej2eC0Lza2GB6D9uWTP/mTp7wV
NTvwHHJa3HPf0QZ8BPeYDiFtIieZr8jPZ4e7z1lbBYfBl6UXx9c4X369DYfD
LuCvul52nmeDX+LV31mrAJIbchS60Dz/rok96Brpstg97Fnchn7m/ut3+CHa
Ze2lLc4555xpLQa5QPKD8Ejqn7B7cT7aMPVXTzIOg+eIxlxbzK1nkzVS8qxV
Pff4jKnXwQehjeIjeoZouKNFGuvlzK3HWeP6jaOFvmG+wOtqf+MQ3sr4aBzD
DXjW4tMtrWtc9YeOSTfCt/U8q+vAfxSfH9f/2bSf0MvjtW3GbmOP+ZBvjteg
9WBrOA85CcZ/nHTlT6N3qeNouMPT4qPV9stzrb+Y0/BI5lp5K3gOPH7mtPjE
tV5xYlPh1cyzOH3zm/aibeQraw9ct3iCuADOnw4kOpqal5lzmuP0YyOmTmbW
6YvGONekLW/+77pemZ/E2szzeDCvcmmyfprnxDWOtkgdT6N7zbkmHlSfhfTv
nEPiHeM6WdvCnEa6ak0yT4xjgTFC3TH2jToq7DB2TF0brfLemada29doNHYR
tQZz9I7reI7MQ+YE/ji/x/yWnF3zYOyJfLfGDU87z1HvqVfzCr9arMQ6vfwi
cRd5AaPdKD4iv8UcHl+Tvy/WVnmOzHN71aI6bKzjOaIPqm3OPhGHobXmf+E2
XI9a/voSnQCeg34ia0jQBojTyG1h6/pbrTo2OK22+8dmS41WdhZeAq/ge/yA
rE+beh14Dr4fjoLvmdwMfAeugl3tc/c3HAcuQpvxFVOf1Oe4Jj4su4sNSLfh
u2KeuBjnI57OXnd+9LaOmXps9inWdRS60Oi6cRH8YPwTPk0sVV9zz7WN3B/3
DZ+B33D/8vzzPbSL9/Ae+iadB7taPA3nc9Lz45fwHHM53TVnZBwDqv2Z9xOv
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
PZ91/71GhrrPfjptz/P/5IVw23zvXKd8aPZpuKc9gDxlfyFjTV50bs6t4zbn
9ZFut2J/U6ef47riHJOHt4anP9JD2ooRJjdPnXvqy+t5s78vaUf6xbxevHvq
9c2hiSVPjLS9afX7nuvp3Do9Omd9jplnZ9ZGWH0xj+T7u3j+0X57tG+sx7Un
rXjZ5A1HdpnsDfnwzfN7z+Lg5vybdUXnWjpnS5jrcfZ311ix4PU6PmcDC49f
n8v5YT7FcT4G876Gztmm1/W8YulH15njkwzb3nyNnnPuGc8dM+WZ1sS6dlY+
2nnTBk1XYRMno9OxYVG9ezaUGWs537s1XL/VJsafTbBr9mxTnpj2o+k7Mdfn
NfPkGhnjXL/Hv1d/jXP9fTTXHEdmZSsnn9Dfq90J52ArZs+zf9GpjUW5FcIt
ra9aWEj99hj768qTHtKMGZkBNuZvscTWAj2QXCEWnE2ar5D9md0JxgGfkGOD
fwesh3xCpie78FHVF/qED8cnP/nJN7/v9/2+E77BH9W5Ym/97y8Zm2xD3mH3
gG94FjITedu8ZiOlp7s+WYsthJ2Jzk/24QtMfqoWgHvyc7UuyFbs+u3b3s91
xdjwt3YeHZ/sSZZ/2zjnpDDPKbNOmaPxoHPz2SBPysNGz6CTwHPMQ/o5u+BX
f/VXn96d34z4C31bvjvjxE/Yd3R5/WN8xEj7jv+xMRY/RE+OF97Fy94GPXbd
12/G2jo0N8jKZEzxUeYDuTsfGmPOn4m+p180x5Pbrd1174wXTDw624R1A+MQ
G0N2h2/gFa4N4+BPQxaets7sKDMm4pzc23sZH7iGNWGOV8vF+FWjyDqacsfb
bp61Ppm+n3M/mbLj5LXXYBbX7tPJ+FPuax+rTdylvS5fmfIdzv0UP7cfy59o
XOzLcEcYl/lnLMyPMI7ZJ6v+OuW/+9rct1fb7Dp/wkyLxfQ/jBcuCoPG181V
PBFvDdOrb8Jy8AfzDr5BP3c+nA1PvYt3zrky8cGj9zmH51yDPRzp9ZfgYJe2
/G2Lb8uend0STxFrqc/g9tYvvR7fOJKrpt41fTaSuWY/rRjHXfLQfbaSzi8G
xf5jfvtrP+XbY8zJD94pnfjoOp7T2qmmlX2+mmH2clgJP0S4h6YmFcyd7cJc
rKb8itkcjetjcPnJ31e9tDZtVzOfUs9Tn/seT/COZCLjzOZgb4EVkltWe/RD
7IGPlYl7tnnfeVz6wcQ5LrWv9R7p95P3Tz+K9X3Cm1f74BF/OKffz/WTLdna
M//svWRyvKxY5/bvctNMOd3/xSJ1bPtXe7e573rVvUrub69ojZZT1jM43nHm
NdkuP+iJkzUu59bUXev7rnlzH8Z3F5ZyztZgvLxvdqHW0Fwzq25zH34wn6f9
In+GxmLiQ+fwjnXen7MbzON7p6nLPmbNPTVde/2j866V9a6Zg+eeZz3fdcMv
rA37AR2H3MGWTl9tzMLYjmx65fhIxp5yaGs+PfwcXto8zieleu/xslVne0xf
XovNz31x2oiO/L+OMJ/2AetJ39qf2OpgG3RE9iy6Jp1TXilx/XRmPpzwDvIA
XasabvP6R3zj2vkysZqHtvZwz5VP8cxth/+SMcp3QUc01+Bq9GJxtPwz6NN0
aXqyfqDb8UmlV/st/w1+IM6lg9PH1VrxG/kaXmQOwxraG9yfLKQ/q2VLBhef
wb5EZiIb5lMLa6HHw05ck/5ObofVONb72kfIZ/RNeBWbK93Qu8EPjFV4z6W2
v2uouRkfb0+Y8pLnIS/RSejPbFx0C3lSvG9+z8Vc6HdzU+NzNJtjyqsC5zCe
fHJgI8aAHGasiwdadYXX3BqD9jP9SA4nR5s71ie9gm1w5iHFt+gd/ITYVvWh
OUFfFc9SvZr2UGuETMJOR1aV38BaJ8+S19lp3YePNz8lcwz2YH6Vw8DzFZNS
Xph4QjJD67Hv3d86Dftj7zTnjbe5EK5lDbqf53L8c47ByttWu2h8Z9VZHzPe
1665dZ9Yr73uRfHKaeOpJcfqb/0OC4BzVQPWPuC3bJn1SXvOlF1XnOvSfQ9l
t5pYU3asZGhzGB80h/AFeRKqDYpnsr97brygetV89tjiYYbwVQ0v4rtUHtIj
mnjuOZn9oXv6NeP9nE2fT1+qZP74h/4nS+AteC2fCP6PMPs5N8/pGysWNveK
h8rZ8bHse543fS3bTPYx9zBv8EzP+NHHNd7LcZ3+OvU+PE3LxpOdOlkjPY/v
m+vho/ATfSLez3zzXb7l7p8smg+k74qnch0tHfMx/ub13RH+ucptc83NPnes
Z8nH1H4QxmEf8M7VYnqof86cD5OXrrFH5/ymVlnjCHOOh4fLhc1NPD88wPMX
U0muasz1f7mv4u0zHuQIR66fs2+lT6RTpM8e2WaLNTA/7Y3mKF7EThHvam7B
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
T7n1yFd1tWXd12bOnOkjP/GgmUMz8l1xEOSo6iPh2fB1awfmSbax58IMPPvE
jpIH/UbnoxfSz8gkdL30TevMPm3Ptrekb9P9yKma/9PFpw5IbuJzSEYg15IH
6H3JAn5zjP+7h+N8776dZx9ybRgBGY0tgM8KOcSeh5f4Dg/EW/zvN/sYv0p8
xn7Kb4z8xk6rf7LP2IPLw0b2c4xjnWfvs/eKC3Sf4pzslfZizT1qzqm552z4
lnt3j3LG8LlxD839XGc+a+d4Ps+Nt3t2DZ7FJucY1/Ncng8G4tqr7Yk9xPzw
NxuV9+95PIt+K7aaDAJX0a/GwBiS4ch55kl6fX7k9iJYRj6nxrcxpONPnCD5
kIzhPu7XeHoHY2icxeYb07Adx+hf/WDc9Gu5dfSR7/SHY/Sp99EvzQHNOiHP
NhfI5exy/LHJNvxs1xpN/s9/mV6Sbz15iE2Lb2L7l2tpfHp9b9/S/K7/jYt3
KpdW6zue+BibzLXyb/eeeSGOcnJ03uS7M+ZuzYkTuV75SK95r6O9ZWLD02+o
lm45n3u1Kcz3CZPAJ+nl9slwqHho2Hq+ie7jc3UVZj4cx+DTeK31EbaG5/oc
5mvdwP3Szde+PtqTrp0j18gl6x45c9NOGe9oDnof74hX4APWc7IfPqSJV7Gu
2HzJgenh1ib5kJ5Dri0ugCxoLVnveAX+BE8Mx8Vn7CMw2nLhP5c81rwK52iu
tFbMKeNv38MD8Ct8BI+BX+iH2fqueB59VW4CvF8/speTkfEqOMfnfd7nvfm1
v/bXnv6Hi7An4nf4nj6FFeFBeCOsnOwAk4Bd6He+CLATfiJ8OGAcsBd9jwe6
lzF0TrlM8VDXxIfxbfweLl3OhinfvW2sI34x+Vq6QuR740L2IZPY57yLOUr2
gKfb26qZkh/ftP94N3wiPN1x+fpa09a4Y5wzMcH47LV98pzNM06sFv9jWyAP
mEv2SvPLHLDn66PI2jcHzHP7tXllDpeX1L5JNjFnyCLWNH5gr7TGw/DMebiH
eUX+wEfxlOxz6Xrlepi5k6x9PBdf8Az2Y3t28XBkO3zEva1Dzd5NJiKDmNPW
l/N8RzY1ps/V/96hvXXN1dR8Tg9sf8qvfdq+H0rXrrkpByRDJAf0ffMnu9jc
v6euFs6R/dgzhUkaKzwNHzIu5EfyZ3M1n4sZx50uOftw1dnWfAETCwmjXXXO
8IPZd74rny0ej6fgvea+/Qsvxz/NM/O6ODf83XfWkvVgT3MNfVUf9iz1m9/0
i7+rPn3kt7/uzZMPVqMnvdJ1p491NYjwu8e0ZJ1LW+el+1r/+Rv43Jj7Hn+o
Rkf1nOLN+TUW958d/6PF7x3vZ/vUpl2dzA7rpiPTg8qJgS/hDb53XPZOzfmd
mz10Xtv17Dmu4xqumb03mzM7b75oeCqcNzzdOfarbMU+e7b8/D3LtO17Jli1
+VXzOX+A7Po1n69tzs/O7bN7FbNQPIPv4RjmR/4jxq9x0AfkCfIJOQOvtvbJ
TvYEfec4e7Dr6yf9nE1CP8EeXMM+wP/Dfv/Zj/O/0j1dmyxJJqIHk2+sQzxf
83+YgGMcSxftvKm/+2s/pMt2jP8dU55YspNG9vIc6bau7Xz6KnmNPOY97bWe
wTX8hg/aM/nN0jnTMcl2eIj9iuxMnrbPtoeRHf3uWPtc+U30q/3QfkeuJINP
bCQcAi+rP+jSnkW/eG/v5jvneV7nOd53/a7Vt72b+624hs89h3u7jnNm/+oL
9/D+s9UXtTDl9HIyRjYtfdzzuZ6xMR+MiTkCc8KL4U9kHmu0OQVj973jyNHN
hfAL37mOv67tvRvTiTf5Xr94r9k3YRP6wbNqjTu5yW/hN66rn/Sdd3Oc35zr
O/KTfjAPyFZ0KnsouyV7Kt9xtla2TTZWtlW+434n+9NPiuNOJyHDsbfC6clU
5hpfRJi95j7eoxyX2RrDOtOtX0Kenblcj/CKc7JQ+3A1zlbfv+qwXGPXPXf/
Kb/MXLu18sUd0YrtTKzEXvrRxzFdxTziwfYAvDlsrzg1fNXc97f4s3Bj+1V+
PeG0dP3iR+HEmjVk7bgGnp9PQn6yM59m7/8Y2fkx+NmM6bvPZqg/y1to/Vuf
5j/c0HqhJ5H1rDv82NqsX+wD1gneTU4kH1p7+TdYZ+zEfsPDa3ga3kUGtu+T
cx6DWVxDxadUZ7M1YC8mx5gDeBt+bj/CF/RJcjAZmF8L3DXbMt3MnuTd7Itk
aHwUX7R/4UF8L9QK+o2/8Te++YIv+IJTvg68C4/Ck/S36+F77Tl4JN5IfsCz
PAfeF9+b52aPx4PneXicPcu8Jl9ZP+buY2J60bVz/CFkPVW3jtxlfVvnZN8w
x6M8PCs9dL6kjxYb+di+eQ7qmaetnsxq77JWzVVzzx5N/sYvI+eYB9agNV0d
WvPU/PLX+jWv6XjFDFkL1V22b9rXzXeyPL44+WCxptkG55j5nc7G3uL53Mtc
to9bZ+YxvBDfwUvMe8dYT7BSMjMZ2pwu3gBvN2ees/+92/RXz0dhxfOqO1Gc
7bW5fx+75vyfjj2/T04IpzlH5RyYa8+7WZvGwH5gjuCJ7F/22sfw6msomWm+
h++yt/vfGOD1dJziMs0/cy3/DfOQvGnem4dkV/ON7FBuXdeyd+BJ2VeKsdUn
5Yu5Zsxc1xo114trnz7z6fXkm3zE0+vzEbykOc/5lzb3JUuVa8Lz+D4dl8yE
f5Of8r8rv08Ygud3Hj6SX3i29uyx1j29hqxC98lGTcfA7+zX1deiN9j78D98
jf5oX6Vj0JWNez496S10kXTmdBrXTDdNFzVf8Ca/OWfqMq5Dd3GONTBjK4vv
IyfYm8kKdEL6c88B27Vu6Pg1n8kS2TzITrU+59d+aSPbatmhinMoXkGf0xnJ
ydWW08wV53kufU/OK9c3eUNfkKftRfAef113xQ/yTfD++pGcom+sNf1kzPxf
/zW2YQaa/33nN8d0LD3aeOV/XG0bz2pfc1427o4zPuEDzS/PNTGNqft7NvfK
r8Ezk3HnffEO96z5rI+SHf3v2TrOPAvvcK3y9oZ5uG9YRTiD+Zd/Br3d3Kbb
wwWaQ/T7MBp/8xWZfiLmX74i+XS4T34n+iG/jXwuqkWk5ePiWs6dOE3YiH5M
z/cu1ofxa50V/9qx4Tm9b7jOxHaSu805z+Gd8Ih4g3t1f+eFn2j5ubhn/iee
N57Q+m4OOMb3+Ig+br36PxzMNf2vP61v/el88yqfkYmb+c09jbW5Y06Q9+Hv
ZK/8N6oF4TP8vT3K3sWvle4F/6CLwUDMsfqVvOZYx7kmXImuY3+xZ9kb7WNw
9JeQf9u3Z62/aXN8CJGDy6my2pOyPzxEb7j0mcMrpo2mOJBzzz79M4qxg/Fr
9sxyFdg37Yn4L35cPBn+6zM+Db8wD/HX4m7xWWvBPLV2zK2wNLK0+UW29xnf
wfvMa/PYPezP9m9YeD640z/lJWn6RB5hUJOMeXpR8fzWjTVDzsuGiz9Yk/bC
MCT977z8vfRluQit0TASjQyZXcxas56tr3Sjt6Urr5TulT9P9SeQuUZmLO+l
8fbe3sdelK9Yc0LftBfpI/wT7ycHm3uwI/NQ3+Dl5hRcojykmhylcgzAP2C2
+I/j3M9YtB+ak/rQ7/GwYmTiczBdfet52oerXY9v2n/IjfSscgumBzwGg31q
mnhffCl7Jpw2bPEczrteY2K+Ky/K/pq+MnGDW/DnmO+XHZttlUxq3zRv8ufA
K4tbSde1H8D2rGk8DX/EB8xnPNG8tQ5aA9UuJte5puPJu3ihedW+0phMf5Pp
g+h7PNN98VMyB/5rrmutKfe13prf7o/PkLPNBzqgvaD43nLtPGf/z7rjR/4c
c151bL73z73Wih366OP48/Id5mvTXqtvZ6xINoZq0rPrZhepD1zLuJCbyffk
K2NlfuQzFc11NvMQHPnhH8XzzxgWz1zMdrnK7cthAtN/mc6Mx/sd3luNIM+b
P0e+wLDsZMzwbcd5P7zdda0d+ru5ly1RI4/Q7ewD5qbnoKsXH89OYO3Awskn
9FT7BrkkW0s2y+LYi5n3mYzjGmSZzp3nkffJ0WTsS9rUdy5pne/en/04xi2c
gPzvXT1nOX38bl/Ml3u1A5M18vWefvR4k2v63v0ca45NnSx9xf43dWV/6S/0
nvziw0vShciCrpE/efq28+kE2aTxJt/ns15cgPOy86YL+T3dczbPP/svfSe7
de83+8T3ZFDN80+d9ChO4b5Wn+YXMVt9nc5ffIP7kSXMW/f3nvYGPJp8Uy26
4peNs+Pq0/z603XDDVxnYgcTP8iuPnGtrnWk63dsuml6brq2c/IVcOzU532v
r+d60Nfe2fw1n81xa816tfambwGe4jf6Rcc7zlovtgZfaC13jvVhPReHY43b
Gx07c2jgK8Xd5icdFiUOg/9ruCP5Oj8l+z+eh3c5Dj9ybL5O9v/p/+Q4ckR8
zDO5XzHArs92cpS7wnXCWnuefJgck98TXlz9oe6hH/QBPpm+Nvv0yK8mrKN1
3boIC21OhG+Gh0x/kHhUPNhfn/u9WCnn5G/kOp7Ld57Rd67vPu7dmvWd5/Wc
nss5Gt0pbMgzW2PeI7wMr4HH2XdgcvhOeFA55ugLdAN2oHKz0yXYUP31O9nK
GoWR0CEc639rS//aw+z/ydzlg32szf0a2Wb1kc0eo5GZyolUzqRkkGj6jK44
RzLYte92X66OVRbPT3ZiGMXq8ZOzbqwXa8WatIatL3+t/+bixITbC8ypeBIe
228Td2tehdfPPGP4tHmgVc/BPKJDwsTMP/zQnHR96wBP8MzeoTiMa8f8mv5f
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
ruf9jak1430cQw4lIyWP5tfhnfWLc8rpkS0bduL48mde2sIVipGqFkXv6L1n
nRHzLjk4/M9n69Vvnnv6r+iX8oFUz/QhtTHpd/aF6nau9WOn/0H+X+VV9X/1
9GbO2+rwJlvYv5IB8GW8u9zl6bOzDm2y9cw5ZZ8rZm7queEozse/Z93rYvFc
qzq6R+2In5dbbtZvmnWcZm2nea/2+FmXIvtP9u/wkmSsZLVpG+pa5/SXZG19
kk9JctesmTVjJctdnGw+YyWz0TomnCEcYM2dW/7cavE2BuaHcyc24dmyq/Us
yUTZbSeONI/xTOE9Mw9mMs+MqZi6d3Km/6c/zBy71fbnXvV9ucyrl2y+6Qv9
YL0UP2QtweqsX+sWjwiXxavodo4vfrXc4HNeXirbP4UsmzybD5B3TobBk7yH
/RrPsb/gR2TSbPDFplQz3HXC1/R5Muo1ukvrsbncHHefcE64q+fET/U7Xhju
PWMc8/1rHyuXcXGB8c74M75ZXuv8xIyxv+XDhrHmV4Z/WgPmfnwxfIyMHf4h
5oBsiL+334X/25fow3RWceP0UP1OJiL32Ivd4zn1x1rvZf63Jq11723+F1fc
nMJb9Js+rfao/dR76zPvga+0v+DlrpdPmesW5+3Z8RZjXa4x52Zv9VuxeZ6j
3N357F3SyuV+SfOc4bXp1D7DwMzDajmR68mu5FP7OFmfnGS/t66qQVGNVt+H
2+h3fUKO0o/l9EgWJmfz3/j8z//8k8+GvK3l9YdzqMXy637dr3vzm3/zbz7p
CuEZnouvB52B7we/tPLjseeQMcjUjvO82YaMo/lvbKadOb+viSlf0ho7fXlJ
K7dz/orVAZs+m83f6b8+fT7DLtqT21fL9e/YsO/OS07RD+ml8XPzwLHl+NNf
7ntNvzxnqzb8lPvwPfyKntY8oXuZB94Nry6OovcO89IXyWr2UJ+z2eQDlC9U
eEI5oI2d52iPKmd04+t65cZxjWITrRvn+c0Y4St4kbXHhwm+Z/7TZ4sZwEPK
9+j62evcRx88V/97p+Z1e2e1R+xV9GN+onBJa9J+R8av/kA2vIc2/XTpetPC
XemE7K6/9bf+1hOOKkdQtcI1exoeSH+hq3tm+oum/4s3yDe/vFbl9ktfM3aw
EvwMr/tdv+t3nfAqPLBcgq6JX+GNvisPWxhHmEnxHdXH8xx4XrEdM6cLnux5
vIdj6b/mPd3XdfLFzO++PAh0Rfu6d3Id99LCZcqx4LjiMrK7ePZwkvAe/VEe
U8+iP/TPzDkYRlPewaO4jXIQzlx++drMvA/kDTp0NiPy1TVt5hu4pHU+/Z08
5jr2Sc9UfbVqICSzVdOxPAW+c37NecUJfPhxzRLynEZGqzZo+nGxVvhZNtqp
x0z9rDw11hT9gI7kL16WfokXWaOuSV7B38KE0+m6Rrp1MgnehI+6rmf3rp6V
nJlOiU/Yg2Eu5A995Hd8xV6Wf3Z++94Tb7eWyWTuaf9tD652zCUNHyoWoTiD
9lf91n6qPz2L4z0z3kb2JbOQj8xl66JaJfnllb+fPlUdtHwXqrEz4yvCjPNJ
SE9Px0jfm3r4qhemWzf28eRweO/n+3CCWesgeWKt9TSfZfqKrvUj2yezIc7n
6LlXLODIttw1s8+t9bTTu/tt2nHWekxhB/p82rVmbd9ZqyksYGI62aLyOVhr
PM0YmIk/FT+T/NW5q59KeNTE8qfeHC4w3/uoDvlas3u2OVfCtqaNK9mmPuvZ
px1p+pg4zvOW5y//lNaN53efqXtnZ51ybuOSfJpNY87Z2WcPaT1/Mpw+tX6t
Q2vY92Fe8THnVJdwjtml7Ro5yvwJl8LXig8IQ/Bc+Cfc2n5Jnvrcz/3ckx3P
/ghHxf/iCcY0XtMYJiuuOsElbc7R7Kj57NqX4BDFYSdL2M/JM2SOcvjmC1r+
H/I67KlY4vzO7GnFDePxjWfzf2JR1TU0ftVs8Iz5H0z/+ebE9CEqV7g9CI/H
t71L9ejIMuzsdFJ+uvQK3+fTcWm7dn5NXtKYhB9O3a85FM80B8wt75Z/i73Z
eigOLz4atum7eJ37tWfo04kluFc4YXZc54TFTNm9Gmn++q2Y+3O2zSlvXOIr
036QL557kb/YScjP5HtyKBm3eF/rK2yGnAEXKge8viqmp3mmL8l9rsGm55rk
7Or15o9fLn+6hUZmqFYUGSIbarVsxLmYY3SnZPbyMJdDN98ia8i6sU6MSf5b
/uqD/Cgv9Z2f+8PEYB/aynecPDAx/YmXTt+K9tvVN3Pa0Jt/yQ/t+dWYmvWW
87nMJyDfyeZ0daiv7Zvnaq3fKQtYQ+Rm/L8YJ7oVHYg+YJ5WK7S1nL9Fsl7y
V/W3Zl6N+m/u6/F/zzB9Zqtdk72gODrf51+mr93b9Y0ffmDe0lGtgfJmmdvW
D70Vb1pxKnw9mQBf0S9rf/Vu00do5qy6tP+rTV6scnkx6SP6m/zPZwJmCbOh
g+MLeIhnjQc/tLWvXbrm9Kl70j/yb8hfLV/6mYMyP3Lf55Ofz0D5In0uD0Qx
/HTxfPyNFb4Ex4W3mYf4GH5WfAf+6Hw8ds2POGNT1hyGM1413wjHlFPSsf43
Bng724r/ky/IRXTP/N3pkMV/V3dCMw/x+VkPhP2D/uav/dI56evulZ9A9m/3
9rvv3Fdjr/f9rGtRTsHqX5R/MP8D96omSrVNq1eaj3z1TrKFX9OKj7+kdW54
p+/KFU+eTx/K7pgPts/n6qOes8OG7666cntEPsVrLrKVZg3Cchj4nJ9/OeTw
L9e3ttcadl0j3as4NlQOs+zPyUIzZ055CarhZ40X75e8nn156p5T10/Hz+Z9
qX/YxIHSfdY4h/bpdGNzGE+2vuFz+IL5XKzIrINr/Dxze8eMh5h7+MyfP3NO
1RfTv6Dj1pqSE7Po+is2kezQ/FjzBhaHeJQ7bMbHtgfWinstP9TMoTzfsTbr
e685mI+uv9baXus6nMvVvPoQ1PfTj2PKWke+KuECR9c85+M4/T+OMJswiymb
TRxytqN5MmNmjvKUHeWJXOdKfXzk27LGN+TP0RpIB4nXzBwO03dmrqNsQ1PW
nb4d836z32afHbVzsRg9m3uHf2XnmjwsfLC4pOeWY/GumVNm8vGwIXoWmwQ9
Rzz/r/7Vv/qkc8MRYKv4zsQa0yumzuC75NRrnnPG5oSr4u/lGYfhFzNUrmyx
eDMfTLh8OXnt3fZJumV2uuTpxis/+N5vzuN4QzzRc7ZHlE/2KCf+rIVb34QH
ua/n8EyeF2/3Tuws+jsbFRnPu7+U/rPuJSsmvbY15nzyk4fkU538ZOqP8acp
O4Qn6cuJZYZ52PfzN3rbtY30lfuRH9meyrXINkdeZqsiU5LDkkEi/VL/zpyL
5BHyMJmaXkNPYxelA+RfytZFDjdPqvOTX4ZnSFfIzkg/EN/yeZ/3eSccpBoq
5lq5O9wn2ygdxfys/kRU/qdzst+m26L41hxLvIrOQ18spzLsi+5KVzM/rfPn
fMbkksgcDDvNtzPe4Tv6m/0CPuP5YQUwQesS7k2Pin/PnGZhqfQKa3ul9oap
q+RTelct1Ye8Y/ur+1ZHxnr27J/zOZ9z8mng88cWam+Y8bBvm9yruN9yvZkj
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
vtbtrdlH7prXq1/F3AOuoXCOIz3z3Jqcv4cNzBoVr8XuuWII0+/3nO509Ozh
U1PWmcfclaP+mue8K/8Xesy+/5LjUv/OWJW1Jf+9FF425ewV31hruooTgSGw
NfLxlkeF7wWsQt5Cfhd0Brk05X7hfy3u31+f2VHhGGoI5p+hfgg8A14Bt6Bj
0c3pIp/+9KdP2EY1FNRKrSYq/3px7PIJaD47x734e/NTgjU8lU9Va2LuydO3
OF+OaoRbH9OvJEpnuhTnmnNpXSvTv8p1rVvj87f/9t8+6YNs3XQ6NmwYCCxk
YjdhHOd0mxUHew28btPldA7ngH39yI/8yGkNyYPJBwhOJnfQS5E1tuIc/uJB
fLz4c1j/MA7PjHdUm6Nc1viR7/PrwEPULPWeGj4C94ABin/RYCNwV7VC8A/U
3F9zC19L+XDlt3BXzo+XsNO398/6ceeeLVkoP7SnpilD3qKP2bU4x63JOpve
D3qqeTkx0jDM12o33rRp0rn5PHXa8PFZr/A+nGPqijN31TXU2pq6wsQWZ06L
1Ve/46d+0HGvAYecduEZI3EfHWGv0w6+vpf+WePsLqVVrz7H39Ivp/37Ne/9
d9134jtTt7zWN+YpKHnW3/AM+o0YEH4a8mFUF4b/BR2D34R6h/AKuIa/6jfS
q2EXsAZ+8GylaqD6y14a3sFm6tjOYXv1vfh5x9Rcg42VrgL7oLPDMujs4jDo
JTCQL/uyLzvVKKDHwEY8kzy2dKSnzN+XP3f2yrnup3/U5AsrNQfumu8rtjvz
usxcXc0xuIVxK6eH+/N/Ny5qNrB7q8FCf/voo49+pT5vvHfy1vXaYbszx/JL
2Jg3PZ7i642zsbXmrRVrjy/Hd33Xd53WG7zgJf05zE3zeeZmMq/5ksEx8JAf
+qEfOsWo4C9yeML2xNqI94CHwGHxK7wF/1BLXS5evh98nLyrv3zF5CuVwwPm
Crd1HfeffXduTV9K7WnlpCon6oot+lwcxXPuD82T+3KlTdnsbfqbT3vMY/fz
yVefSzZ47TLLpk0PpaeQwSfGMfOfbRvKptdOycvTD77vV0x75rp7SO7R1f+/
2gbXULpIe7J7VouE/eijj+vEs+fwyc+HtDiVuXbnM0076Nz/n3PdJjs9FHtZ
9e4jv9JVdnFOOs9j9J36MB3rLl/96fPwmmWG5Ne78imt+utL50kv/pi+Izcf
TIMeoZ4BXeef/bN/dqrNI66E3pyvBj8NOITYCJiH3/2VNwPOwF9DrkA4hv/V
9OFP/hM/8RMnOyudG27i+mLif/Znf/akX8h/WKyL3312f3qMc2uu7f6wD3bZ
L/zCL3zzyU9+8pSD0P3EuNMhntLG2Fy8L5a0eTBjW+b43jUvJ+84ymF3FL/N
hwSvope17vExNTfhRTAhfSJmSDxPOXDWWLaVb/ccxcIXs/427Lab3j4d4Rzm
g3gztYfp/Xwf4Bz8IeyBL0XFd03Z13fmoZyhfLbwEHwBj5CjGAaSbBBuC+8T
R4c/wVPhrnzHxMOpQ8R3RQyLd4aX4GFi6uCG1V1pLcycW4/h112P3FCuzTU3
aWNVPs7nXnOXvt9d/OxIBjzXjvJUHO3p18aCzNi/u/KiPpX/8KZN7xI9FudI
pp/+5rfqq7Xp/aNk+6M4jmnvXGuyZ1ucmN6Rbp2O0bnX+o9O/CHZhT5EL0jP
o+Np9D3yk9wD1XAkd3TvZJHs8mvtyeeOR8jf9KHY6Nz3j/xAjvSeicU+hY1p
tdWsssyaN++14xzx71vJp1SuDf4bcAWxDWR9WAJcAmYBo6AnwyzEnrCl0os0
x/H1+PDDD0/rRRyLRqeu+d7v/OPhD+zH1hq/ETZj+hRs0f/WGGzRc1V/xXeO
od/IWepctlr6i+f94R/+4ZONFubBxgsvcZx1+ZTjP7G5KQ8fHTf9O6Ze+RBa
4wuO5P3JT2ecf7+X21RuV7gRHqZfsxvfh61N/DO7y0vXBtr0OIp3T2wVhm9u
wC/FiInjoPPLAfySeUib30c+Dua1+CsYhhg6/1d7ddoZijPzG36AL8FEfuZn
fuaEq+J3MFTYrPy8sBP7fbUPq/+67kNPVRPAdaZP39y3p7/HU+O1b4vOYRFr
zs81/8X8bvr6znpfE4s4l0fjIc11Z17S8sQd5Uedz9e4vFbZY9Om56Cnwjkm
vrjXyqZboWnvWHGOZA77CfsRvYVsQvagu1RDtFrpR7EsPuc/nS5/LU1dAM5C
h2LTYkNm92ErJvfR7eh84n75v5bj0HPOdyuXwdwbyz/ynP6ms5bDfdjofXaR
iW9M3e5t2jgmtjH532Pbc1Hy6S3Vx6L7Wo90BrI+HMP8h2/AMNhL6QL0A3qA
NaAeMewiHLB6qPSDfKE0OAb80Pp2D00OTH7lcIxkzClzTnl/5sJh8xSHUi7/
6gX9x//4H0/1RazTbLtwEL8nHz8VJhdNPWqtPTjtEsW5JDvf598zfczmOjha
a5MfJoPXR9m0nafOjfijaiqlP5aj6NzzrPaWh9Sc2fS6aY1HQHTo//yf//Mp
howvlAbngAHYo5/bxrZihEe2vvbt+EG1jSb2N3HFMD/8CJ/DH/zFs/zFw/QB
/mWdhHFMu3+tdXFtDu742nzPqf+3d2d/KK/nc8oRd8kFd7Vztopz/mmr7+iM
55y5xVa548jP7aFtrX07MY2j8Z762LV9smnTu0JPgXPctz46Zq+dTa+Npi48
dWSfySBkEnoJeYLPBJ9q/up0FHIHmYo+RG6xzx3pBNOX4DH2jZ6LPgBfoSvx
0+WXz6/1z//5P3/KczZrOvBz5a/vONjMtJ8e7dnpN8+p60459j4ecY4Hrd9N
H7NpL3sMncMfJtZ7V72H14pzoBUPWvHrNQZh6rcvQflKsOnCCfh2w/fElvz0
T//0KXbFerVu6QnW8aw54D1gFNUNnDU71riNa8clvTsMdCX39g78QWAoswag
Z6G3PEX+wPWZyj1K56JrVY8hPaacoOE5R7jC1HXW3+/rp3zcmkv4J8wJT6se
5cwBEH6sf+DNR7USe57sqrP+5abbpnj55K3WBuze3idHBb8oe554Mvvcc+O1
YcVrDY/7/OOSjcudbO6ue0j5s2edt3wgj+SJGQcaP2vNXyN/tPaO5Jue5TX4
AcYDplxzX3uqeVK80n25yZ+bZp9c0l56LDdtekp6Dhk8PWavnU23QOa3PYtu
RAf59//+35/wDXkM2Y3F1/OJ59su3yF5i55CZziX+2Hq8o95LtcgD9GP2KXp
eDAONSvlYpe7T9y/3Gxq0/mfrYufB//7cv6do2SE596nH4pvPJRmbD4Z7Sne
5y4c9y4Z4RZwjvV5j+oNTXvVNbU3npKyifKzEE9S7Vf/tyatXbqz9TJ1jml3
XG3+R3a3iXc8dC+bx56r71fOQnN0xRPCAp5aV29s19w201a+xp+cm/PTxnHN
M9SvdLg5RijdbPLMh/hzzLw5r0XX2PQ4mnO2+WhNWf/8oOD78nTC9/lw8QN6
KX+Ou/Lu3nXukT9HFK9a8wef40Ot34ldPzbn5vTnOLrfa1hvq831OX0XVp72
Wugl+2TTpveJtj/H66BsmNkvr8mj4rh8ssvdf3TMrYz3kazenkX3oEexGbMP
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
rornyOd/+Zd/aW3BbwrXoX3wRtGL9/5XiROp7/X+B308hKy925amw7HlDv6T
P/mT2VOe8pSWV4dmhK4lz0c4wbJNNxtpx/SXxCLt86D0/knRZ+grvZ/KIvT9
a8iN9bFnymZYb/Q8h7bUR+RwMvbjuXHCOH5xgjKWrEv8pUJhv1E8R6FQKBQ2
CX3e116LndiP7HI8AfifL7L5nVib7H26Bfa/2I3iWQ79MVbNc/S5QjJXZbda
k5NfhE3PvudXwldDvAc2T/Ix2Ja/ifX+Cy+8sNnX7p8WRO4O81v3rfCDUEfu
NTkWrP/xq+hjGfZ1bLtV5CLM/J3WAX+Ao8EfaE91wu6nc4B14DkAH0MbQz8j
9612cY29VkNf7XOCzvMzGK61x86VT+GSSy5pfkl/8Ad/0OpC3hlxS4fakuI5
NhuJs9Fzjukj6R+J7ZJ+5DucWp7z3cZi6HMkB4s0IRWTdL3Q8xz5P/nV8f34
cdw2rZn+kffGOvglFgr7jf149/VxjHZbVpGrb8x19mPFXkrd22rvbex1jqmP
Zcoy9bIJbbfu17jtmLINpnxuslaZNeqU6DloONgDtvOZPvfyyy9v6/7yy/Jf
ofE370scA/N/cz32cWyFVcTbc66swfZrtHgHNvNdd93VtBa0G3KhsGfZL7lG
c1axK+Riod9I/EtrePQPjuFY8e8Z2k3RFSSPzTxb2z6x0ads71wTDQ4fHrlm
+NjQYsuRa83Sb9H0ZI1yquuMT0nvS4BTornAceh773nPe5ruBJ8UDi383DDW
TP88ph4Sp1Sbs11pbmh6XvCCF7SYsvK68L9nw/SxSNOnlskhNHaescz8ZLfI
M9zrVxLPd17u036bRTlHUne9tl/dD2N6Rt/UX3uviRjGf8045dpyff12O91j
78827B/DOKJ5ZjwHxkT9cifer+9j2TfnWzRvPBJ6Dcq8ewufkpggGXtTv/Ef
DA+ruBcFf5NnLfvYts+xi8vF29J50VHRp9HG+ex7nGN+8z2fskOHDrVx1Vjp
+cWpisXsmRLrIsWzZwz+yle+0nRadHLXX39945P9Nd7SxhmLjdk4aRpC/LoY
ynhr+yq33357y5ONk3c9ebeNeW7Uh3rJs6Be3M+Xf+67Ysw0Rohb1feRsWPl
GIy9t2XHkzHvnnUvy7TBVO09Fsu0wX7OP4axrnZT+nWGKUrG7b2W3rd1t2Wb
7204713XexvbBv3c5GiXsdeYZ26d221sXU797GxzGdtPlumXw9wOuyljn5/e
dyLnVxLHMTlFfWeuS/sgHoWSmAbiO0Q3Yd5sPmuua/8+ZscmPTuu3Xzcmj4d
Bz5H/hV2tjl3OA73FNshdTnmnFO0uTE9to5r1Ub8y3EGcs6wK8zh8Vnamo1j
nt/bt1MU53T+5O10bvaRmBk4DrFQ+JXQ5LiHnZ7R2B+970nqTl+1P1tLbmRa
Efl09Gk8B9+me+65p22Xd2jilSSe7NjxZMz7uNeg7Lb0upbhGDOvD7o/PCWb
LjyX+3e/nolokGK7xxaMlmlePUc/4XfH8OxoW1waG1nR3j0/Gj6p9z+KLZ6+
6DscleO5vsSczf67eb4yBs7r3+k7qQPXFj+o9Kl+v54TGV53Ss/rhJMYcjV9
24VjCseS+KX9dvm9r8+eewgngbf1bA+5BwUvkX1sb1vbGAP5K37zm99s3DCt
Fy5BDB/FZ7E46dv8j2vwvXEFZ4GLMF56R9A+8OczpuIH5Lq66qqr2jtF7B1j
q5jAYj7LXSUusBjPYubIfyX2tfcO/0G6K89q4iXRVhgTjNXiKjm+a1LnaeO9
Fn1KP03b+J+eI9ww/Ze8K+41Pk9jx8pl5gtjxpKxZeyYvsz4NVWZ2t6Zcj40
9r3TX2/4UONWz5futoRXHVP2eq79OOcUxTUO3xFHs+Q9sq1FH91rSXyuda5L
/WTMNWa9Yq9lbJ0s0y/HXmO/XrbbMuYax5xn2TJV/U/dTzJH32vJXHyvYwLb
wr7ehdFwZH7OfrBN5uWHDh1q2obkVZVrxNo3DYB1PNdhbmgtzbb+z1w+uS+m
fnb2WifhANgM5u9XXHFFi9twzDHHtBwq7GzzdXNe9+X9z9ayfe5xzBg25Ttc
22ortg3/D/Y8LYe5OxtG27m/fp137Jg+9t6UvIfMt+677762fpq4seyZK6+8
suVEcR/WVBU2CD0K7kI/zHqx/23LtsOZ+N66r3Vh9haOA48V+4otpV7Yd9Gi
x55M3Y+Zn+Q5HfM+Dr+ylxJeIrlSPdPqS12oA3WlbtSv4n7Vo9/ZdOqKT0+2
Yfeyf9nKh36+Xs9O9r2ifv3e29GOZV/2srYQk1c7WcN3Lu3AVsSx+d9zl/b0
P/s5ha3tGh0ntrftHMtnvJTzuF7X7Zqc333Epndfrtv12UYd2M91KY7j+nq7
nu6LlsA1RjNwxx13tOuzneJ/3/nNNrZ1X/qYOD57KXg356RXoJejaeBf5q/f
fe/ZVWyLRxA3QsEjKNdee+3h73CYH/zgB9tYjQPAL+j3Kb7Lbz7jPvEPfPZo
F8TcxEWw7eU9wov6y843Riq2o7nyXbankbKP90b2y76+t43/Pds0c3JUGWv5
jv32b/92y/f8xCc+sXEdxx57bOOb5fi2je/kwsK340Ge9axnHd4OZ6K+knt6
zPMWn8Rwbv7XZ/Q3dWXMdA90Jnlve8bHjM2Zx+51HjTmvb+KMqb+U6Y631hb
Yuy7cUr7dpl+kvexOZ65jveK+Q4OdS8Fh2q/MSUc7F7LXq8x+rSx15kxYy/F
O3lMMS/Za8lcdYp7s8/YNhhTnGtM23k/jKlL+41p7zHFuca0edaU9no+/WRM
nYwtzjemTuw7Zl485hrHnGeZMmX9T91Psl63V87Hvnu9RmOCtTvXmvVt44Vj
+T/rpFmHZTOIU2EdzZwUzyGHqrgJbInYUewM64GOkXXcjEFTtt2YdnP9rlm9
sGvMyeWXxec8/elPbzwHXbXtsrbsvrIeOnYM22sZO15qz/Ac7FT2EnuGv3l4
Dm2nT6T9zOGjXZ+iJLZoOEb/sz/FhME58Zeyhsu2Yt/yX2GPsa/YWvgJdlxv
t7k3Gnhtd8MNN7Tv2WIXXXRR80fSxmyqxzzmMY3noOewP3taX4qmP+sveSbG
jCdj53ljivNlvuo47D42Ods4deGvmKuKz+xDv/MP8JedbU2efR1fAfY7O5yd
bd2eLW87vyv5bJ9+PZ+dnnNoD0VbsI+1obaL3Z228x3tTtpVW7Ljs7/ieLQC
ju88zud+nL+/Lvfjmj3b7FPXZl9cAB4gRds7t/Omb6XoY77z3LgmnIDif98Z
D2Pzs+ONIeL69MXzJhYOPzhFPmeFvR8fMudiR/ue3S4esjg6tscf6L9KeAK/
0zT4m+JzCm7Qc5PieUrBWxvT+SQqyRvlOcAtKp4TRXwmxf9yHzmukvM4L31F
imtXXHv+eo+4ZnXgb+ID4TlwFcbb3/3d3218B57jGc94RuMx8Br+p/MQL9iY
7LPtf/M3f3P2a7/2a7PHPvaxbZwwPuCsjHNjn5/oOTz/nh88medH39AOrl8/
y7pGYrhMNWfLuDzWdpnK3hkzhk15T8vYO2PaO3ONKeexY/pJf72eI/M4/9OH
+byXYo4UHmEvBb9iTjKmOOdei/ONHS/G9PGxc0D9bq8l8/6pinn0mDYYU5xr
DBemDda9LjM+7fUao5sd89yPqZMxJfbM2GvcKz+4zLWO5STHlKnqfxX9xDwp
eordFnMs++712fGMexf43xwt77LEznTcaLUdn61pPswmNBe2/m1+aT4ee9B2
+BDHzPyQjeW9mPWAqcqYcch+7FnXy45jo+Bz+DJYR7Tuz65LbNGe5wiXs9fx
a2wZc67oc7QNDTu7j81mzs6+ozt3L+Hcoq/XJ8aOz3st+kv849MHcRn4Deu2
Ymjgm9h4bG72MPuI3p3N89znPret8dK2KyeeeOLsL//yLw/nQ6bVwNXZXv99
whOe0LiN3/iN32h/2VJsS7Y6uya6lqyJZd2VnTFmPMmzN8XalHbDzWhPzza7
z32xy8XaYSOzxWO/Z80+6/bscXWh38cu9Uz4na1tnZ5Nrv/4PfZ6b7fbV8Ep
pbBzU9jF8jext2PL+57/Abs4drTis/2dD1/Q6wMU16PkHnKdfJ4U94eHwEng
IWzrOp2PTe7czptr9Nk1JZ+x8U/fwxPEnrdNbHjf+c02trWfOlNHSjiOcBup
l9xvjuN79xWOQ92EU7BttATuzTFtj2NwXnyF+hwW1+MYKbZNwTGEu1DwGjgO
47zjZV/buhb3GB+R9A335N5cW6/X8Jyqa/0L9+BzOB7bhgdyn87n+faOCa9B
n+F59oz7zfNsTPb+8dfvOI9f//Vfn/3Kr/xK04F43p2PLsc4N+Z585x6fuKf
ZWyi58Ct4jnSbni2+Nj1sUz2Ok6OmUdlPFn3Mqb++3aY4nxT2jtj7ZZl5rFj
2y7v5bxPvA99z67cS1HHY7gd157YP3spY+dj6msMlzR23XZKHfCYtZmx95a1
16nGGOcac2/Rco2py6nW9tNHxmi+x55vGS32Xq9xTF3mGmMj7LYsc617Pdcy
Zar63482GFOPYzWJY9aCjA+x7f1l3ztW/GGyjm0MsY5l/ss+ZCuae7IrrWHS
pedZzDHiO+z68l5f93azb++3wh40x+c3br5vfVc9JK4gHUzW6Me+D6byYVD6
+AXJHcAGYadYw8ZzmJPEtk/MAPUy1ZieHDT6TnTg1t/ZN/K+sm+0CRuKzc6e
sa77+Mc/vq3/PvWpT20+RvpptOz+P+6449oxFHYU7bt92Ei2cWx2FHuLXgB3
5/mIZir65OTPGOPTZv9l1uT2WpwzOhTPJf8MugZ2fnwG2P9sz/AcvmPDxW5m
I8feja3NnldPtokewHZD+7nXDERH0PMW2d++tvfZcWPzhzfIMfzu+9jW83iV
RdxKCrsaP8AmZ6c6fq4/XEv0BjmuYyUGRLgN2+Q6cs5wI9nWfbD3cUq9H4c6
ZuOH87B/z3c4Fts/WodoMRzXd2k3x8XVOI798Qc9zxOOx7ltq51xWuEdeu6h
367XrfAP01/e+973Nj0NXhEnSlcTPxm2Pp0OPQ0tTbQ/OGH6GZyxuB3x5aGj
oYOIxsZfnx3HeVxTrt319PqY8G/h4NQPTsb7yDPOt0Ud0fUY47J2PkYX7rlJ
jBnvR5yJZ0gdqG99RT2wq3obbqo5W977U+kCxo7pY8avqe5pVfbOWFt17Hxo
TD8Zzo0S98i7b0wchLw791K8v8bwAGO00YlLNSaWzNgyZaycsXFyxpZhvPGj
Wcb6/G9CXS4bG2mqOExTXuMwFtzRjmc59lxTXuMq2mDMubJ2tNcyjGG3m5I4
g8YH8Tn8n7gTfYwt9+J7cd2s+bEPrYcnNic/cGvFyZmQ92Fim7qvxB6Zut3G
jCf4C/cgxoA5Oq7DHNtfc3RzZ/cFtg3XNKYNlnnPjTlXny/E2iSbhB3BvsJz
0E1YO4l9bJ9lxvSxYxc4bzQd6p0Ng8Owxsvudt1sJDYRvY1+aW03+g3FGrA1
X30Vh6H/sokU3JXfcXbsXPalY+F+xHcI55XcLH0M17Hx59zfmHdx3257KenP
rpmdRp+Cy2KTslnxdv6yW8VwYL/RO7C9ew5DfYfHYHPHH6Hfxm+9z0K0EfrW
Rf9rE4Y3iN6fndrrG/zPRo+97a/P2UYJRxG7PDqOxH6IZsLxez3JRZ2OZMhz
xKfD3+go2Pn4W+v28X+KP4o+4n91Z0xglyv+9x1eIPEq/I3PTX7DHRhPcg/u
MZqG6Bxyr/66h2hf3JPvY/vnWOE7XCd/o8Tu8Nz0cUU83+KHiDsilogxHZ+b
gsOdF+uERk/fSWwW9r5iLEy8k2jTo/uOH0BsjrwDzEk9W56nefNi20cb32uS
nYem0HW6j8RN4X+kP6tf9a2O8SauO++cZZ63vAPZau5NTBfPir6i33h+XKPn
y7Vn3Bwzjx0zF5pqrr1MGTvmTXm+vOummGf0bb6uc6HhOzzvQu++Me+x7L/X
fC/p41PZr2OucVX5gcbEo52qrMJWG2NPbkJdjm3zqfvXMnGS1/0at7lM3U+W
4ZrGjEN5F0C0+N4pgd/MT9m+5sfsRLYmHw7rZ+Ldm2far7epYqv6nPesv5vQ
dvZ1D+7J3Nq8P/ERzfPN3ft8bXkHr/v7Me2dObzYjGIasPnYrGwk9gMbJVoO
bbaqa+3n8a5Lf9P3aIj0Q3Yiew0vwdbGY/BZwb3hNfAbOJFwIPQajnHKKae0
fsuPRQ6H5Jqxxqydtbn1xPRnZWj3pO3H9MmpeeHUo+c7XAd7Ft/x5f+1f9Vh
7F22IztZnVoPF7sCj6l+/E2ez8S/ENsjOTQUv/luXnwMnJT1/djhifFh/LCP
+redz7ZLbBDH8rvrcUwaHtv4Ld87r+tg77rGXLO1dhzO+38e74NN6nf72MZ3
7ONwFvbxW3KYJt6o+kkekfAG+mT4AsX/vvNbclarT5yBWKf0QYl3mlinYlom
hqlz5FiJcdofN+fzfbiIHMtnx3F8dngfgzX8hH6Nmzh06FDzV8Qj4A/Y7sM4
bvEZz7p6NAdZg56nrezz0ST+9NCGT//P53n5L8NL9PGnwo1Ef588Mslf6x5x
Mu5fPeNdXHvssmXWU3JNeX4cW1/DQYXniIYxsamnnLOt+r2yl/F8jA0y1fnG
tsEy9bLuc6G+FAqFQqGwychamnkpeD+at5nnmhezi6yDsxv5CVg3N88zP7eP
7bNf/mZNIN9tAvr5QXJs9D4Vudeem8p8et1hvuL6tTU7iM3HzreWbb7OrmPj
ZB00c7FVXGN/fvYgfYZ+h+vAUVjDljOEfcPGtr5qGzoNBe9BA2IfhS8L/iM+
SImfwEZmh4bfGN6vz72ttgntHLhez1/mqu7BM86mZZspvQ928oke+nnsOP/j
w/QVf2mA2MqJ8Xaoy7miZK2/t6VjR8eHto9DYGzxe44fWzz5T53Pb/zikkMl
OVP6nDE9hxD+YMgTGL8UnIDtk+sFJxHuwj5+cw730Mffj13tb38/fWzgoQ3u
szHkaNhk84rxqdf8h5uYx0FkjTUaqnl2V7DIfhqDebzDbupnnq0171nt72O/
xi/HUVeJqY2/oyHKuKm98TGrGC8LhSmwH+++sTzNlJiKe+rHqKn4vym5tVWM
g1NygKvoJ1Ne535wo+tYlwfhOte9nywzNoy5xh7mwObG4SViE7FV2BXsBbp0
tqN4B/J78gFnZ7p28LefN2etL+/IdW83+/XreLmf8DVZ5+u/i0Zy2fqfor3T
rmwdtqP1a+uSfP9p79l97NDYZrnGKZ9vddyvBfuO/SpWYvQZ/KbYGexRdp2/
7Fvr58lB+uX/tVut/YshkFgCNAC+Z+s6JpuWLZ08Q/HhGqLvT/13U/bLMSXc
ZZ7p9Ofeb7b3c0kemeQ8HK7bx17OGnt8trJNfu+3iW3d29e9Jj3xQ+LLkH0T
/ySx05L/Kdvlt/jHZ5s+NmDityYWnrEseYds5/dDP+dqlPA+8bfo4zH38ZP6
ehv6OfTxXIY+4sP6Gl57rn9RrII+nsO8mHTRYfV1PPSjXDRXXtTfhhrD3scs
4/6RxqkcJ8922sjfxCqY16/6Okr+8yDXNXxecw+JDeV8y76L+3HTNdMaeffh
Ofg24epc95Tj5CaVqedem3CNU86F9qMue53uGCxzz8ucc53bpZ9PTuEXP7Xm
eOpxZhm967rX5TLXOKYep/Q3GnONeX6mau+xflFTX+Mm9JOxY/rY8TnXC+E5
YuN6r5ljZ43Veim/efYmjoMfOT0A+8AxXL99zQXDdWTenntbRdvt9b3T+/LM
g236GK2xyad+D4w9n+vX1tbCxR7g8y+2At0+fkAf6PU5y/SvMfeo7vu6db2u
lW8NPQa/Fb4p4hbgKPrte9/4rG3TFSSOgHV5NmZ4NyW5jxPPou83fR0M62KZ
9+NU415yPS/ib4awT/ry8F53Ux87zcN2WpvaaVxLn0jbLLqP4fuv9ytf5Hfk
d+0f7oF9nX6Q67Z/z7sdaV0zz1h8xNR9HzM6HEcfGzDj5KK8gUPOYxjDOHxH
2rkf13eLReNL3/f6Oh3Lc7jG+J/ENyZxCnuOq4+zaRuf+2tKmw61X6l/51FX
jjXmeevvrR+XXCu/Kv5+4YdxaImfPHasXGZONNVce2yZ8t6mnluOrf9VzWXH
vr89l73Wd6p77t/V624HjSlTxq6ZMibMMs/hMu02Vay7KetSGXuNY+txbDyf
MWVsf5mqrYexiqYoU9b/1P3EvmNgTF9mPALzwsTncLysu+ExrL2Zy/GHF/tO
HD7/Wxc3V3WMzEsTq9F30XOnHqduu7F1stP83X30dvWyMa+mehdnvuCvOTm9
f/IjijEZnkMfsH0/xx97vrFFfSbXimPxXeBfw+ckuSbZGDQpfRyNfl6WZyK+
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

     "], {{0, 130.}, {541., 0}}, {0, 255},
     ColorFunction->RGBColor,
     ImageResolution->{144., 144.},
     SmoothingQuality->"High"],
    BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
    Selectable->False],
   DefaultBaseStyle->"ImageGraphics",
   ImageSize->Automatic,
   ImageSizeRaw->{541., 130.},
   PlotRange->{{0, 541.}, {0, 130.}}]],ExpressionUUID->
  "0933f029-f29f-4226-b80a-94df02d693b6"]
}], "Text",
 CellChangeTimes->{{3.922549047876725*^9, 
  3.922549065508541*^9}},ExpressionUUID->"ad1ae7bc-589e-4353-9015-\
b47aa5cf5486"],

Cell[TextData[StyleBox["---------------------------------------------- \
FINDING S_N(XSS) ------------------------------------------------------------\
\nLET\[CloseCurlyQuote]S TAKE D/DN OF BOTH SIDES. \nD/DN(LHS) = 0\nD/DN(RHS) \
= AS FOLLOWS",
 FontWeight->"Bold"]], "Text",
 CellChangeTimes->{{3.9224899120396976`*^9, 3.922489926985181*^9}, {
  3.92254650433106*^9, 3.92254650486051*^9}, {3.922548840708638*^9, 
  3.922548864756011*^9}, {3.922548895691052*^9, 3.922548925207027*^9}, {
  3.922548965705358*^9, 
  3.922549068407605*^9}},ExpressionUUID->"6866f1ec-91fb-46a1-9982-\
94b7ce5fae68"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Expression1a", "=", 
  RowBox[{"D", "[", 
   RowBox[{
    RowBox[{
     SubscriptBox["\[Beta]", "x"], "*", 
     FractionBox[
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{
         SubscriptBox["\[Beta]", "y"], " ", "*", " ", 
         FractionBox[
          SuperscriptBox[
           RowBox[{"x", "[", "n", "]"}], "n"], 
          RowBox[{"1", "+", 
           SuperscriptBox[
            RowBox[{"x", "[", "n", "]"}], "n"]}]]}], ")"}], "n"], 
      RowBox[{"1", "+", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{
          SubscriptBox["\[Beta]", "y"], " ", "*", " ", 
          FractionBox[
           SuperscriptBox[
            RowBox[{"x", "[", "n", "]"}], "n"], 
           RowBox[{"1", "+", 
            SuperscriptBox[
             RowBox[{"x", "[", "n", "]"}], "n"]}]]}], ")"}], "n"]}]], "*", 
     FractionBox["1", 
      RowBox[{"x", "[", "n", "]"}]]}], ",", "n"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.9224892013168364`*^9, 3.922489312475017*^9}, {
   3.922489390453268*^9, 3.922489435104053*^9}, {3.922489480341864*^9, 
   3.9224894853807793`*^9}, {3.922489652919924*^9, 3.9224896818897963`*^9}, {
   3.922489771337832*^9, 3.922489772504733*^9}, {3.922489981438389*^9, 
   3.922489981697007*^9}, {3.922490013675529*^9, 3.9224900291128273`*^9}, 
   3.9225469486693077`*^9, {3.922548571715845*^9, 3.9225485737640057`*^9}},
 CellLabel->"In[31]:=",ExpressionUUID->"e563f891-29e0-455a-aad1-d20a488e94eb"],

Cell[BoxData[
 RowBox[{
  RowBox[{"-", 
   FractionBox[
    RowBox[{
     SubscriptBox["\[Beta]", "x"], " ", 
     SuperscriptBox[
      RowBox[{"(", 
       FractionBox[
        RowBox[{
         SubscriptBox["\[Beta]", "y"], " ", 
         SuperscriptBox[
          RowBox[{"x", "[", "n", "]"}], "n"]}], 
        RowBox[{"1", "+", 
         SuperscriptBox[
          RowBox[{"x", "[", "n", "]"}], "n"]}]], ")"}], "n"], " ", 
     RowBox[{
      SuperscriptBox["x", "\[Prime]",
       MultilineFunction->None], "[", "n", "]"}]}], 
    RowBox[{
     SuperscriptBox[
      RowBox[{"x", "[", "n", "]"}], "2"], " ", 
     RowBox[{"(", 
      RowBox[{"1", "+", 
       SuperscriptBox[
        RowBox[{"(", 
         FractionBox[
          RowBox[{
           SubscriptBox["\[Beta]", "y"], " ", 
           SuperscriptBox[
            RowBox[{"x", "[", "n", "]"}], "n"]}], 
          RowBox[{"1", "+", 
           SuperscriptBox[
            RowBox[{"x", "[", "n", "]"}], "n"]}]], ")"}], "n"]}], ")"}]}]]}], 
  "-", 
  FractionBox[
   RowBox[{
    SubscriptBox["\[Beta]", "x"], " ", 
    SuperscriptBox[
     RowBox[{"(", 
      FractionBox[
       RowBox[{
        SubscriptBox["\[Beta]", "y"], " ", 
        SuperscriptBox[
         RowBox[{"x", "[", "n", "]"}], "n"]}], 
       RowBox[{"1", "+", 
        SuperscriptBox[
         RowBox[{"x", "[", "n", "]"}], "n"]}]], ")"}], 
     RowBox[{"2", " ", "n"}]], " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"Log", "[", 
       FractionBox[
        RowBox[{
         SubscriptBox["\[Beta]", "y"], " ", 
         SuperscriptBox[
          RowBox[{"x", "[", "n", "]"}], "n"]}], 
        RowBox[{"1", "+", 
         SuperscriptBox[
          RowBox[{"x", "[", "n", "]"}], "n"]}]], "]"}], "+", 
      FractionBox[
       RowBox[{"n", " ", 
        SuperscriptBox[
         RowBox[{"x", "[", "n", "]"}], 
         RowBox[{"-", "n"}]], " ", 
        RowBox[{"(", 
         RowBox[{"1", "+", 
          SuperscriptBox[
           RowBox[{"x", "[", "n", "]"}], "n"]}], ")"}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", 
           FractionBox[
            RowBox[{
             SubscriptBox["\[Beta]", "y"], " ", 
             SuperscriptBox[
              RowBox[{"x", "[", "n", "]"}], 
              RowBox[{"2", " ", "n"}]], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"Log", "[", 
                RowBox[{"x", "[", "n", "]"}], "]"}], "+", 
               FractionBox[
                RowBox[{"n", " ", 
                 RowBox[{
                  SuperscriptBox["x", "\[Prime]",
                   MultilineFunction->None], "[", "n", "]"}]}], 
                RowBox[{"x", "[", "n", "]"}]]}], ")"}]}], 
            SuperscriptBox[
             RowBox[{"(", 
              RowBox[{"1", "+", 
               SuperscriptBox[
                RowBox[{"x", "[", "n", "]"}], "n"]}], ")"}], "2"]]}], "+", 
          FractionBox[
           RowBox[{
            SubscriptBox["\[Beta]", "y"], " ", 
            SuperscriptBox[
             RowBox[{"x", "[", "n", "]"}], "n"], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"Log", "[", 
               RowBox[{"x", "[", "n", "]"}], "]"}], "+", 
              FractionBox[
               RowBox[{"n", " ", 
                RowBox[{
                 SuperscriptBox["x", "\[Prime]",
                  MultilineFunction->None], "[", "n", "]"}]}], 
               RowBox[{"x", "[", "n", "]"}]]}], ")"}]}], 
           RowBox[{"1", "+", 
            SuperscriptBox[
             RowBox[{"x", "[", "n", "]"}], "n"]}]]}], ")"}]}], 
       SubscriptBox["\[Beta]", "y"]]}], ")"}]}], 
   RowBox[{
    RowBox[{"x", "[", "n", "]"}], " ", 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{"1", "+", 
       SuperscriptBox[
        RowBox[{"(", 
         FractionBox[
          RowBox[{
           SubscriptBox["\[Beta]", "y"], " ", 
           SuperscriptBox[
            RowBox[{"x", "[", "n", "]"}], "n"]}], 
          RowBox[{"1", "+", 
           SuperscriptBox[
            RowBox[{"x", "[", "n", "]"}], "n"]}]], ")"}], "n"]}], ")"}], 
     "2"]}]], "+", 
  FractionBox[
   RowBox[{
    SubscriptBox["\[Beta]", "x"], " ", 
    SuperscriptBox[
     RowBox[{"(", 
      FractionBox[
       RowBox[{
        SubscriptBox["\[Beta]", "y"], " ", 
        SuperscriptBox[
         RowBox[{"x", "[", "n", "]"}], "n"]}], 
       RowBox[{"1", "+", 
        SuperscriptBox[
         RowBox[{"x", "[", "n", "]"}], "n"]}]], ")"}], "n"], " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"Log", "[", 
       FractionBox[
        RowBox[{
         SubscriptBox["\[Beta]", "y"], " ", 
         SuperscriptBox[
          RowBox[{"x", "[", "n", "]"}], "n"]}], 
        RowBox[{"1", "+", 
         SuperscriptBox[
          RowBox[{"x", "[", "n", "]"}], "n"]}]], "]"}], "+", 
      FractionBox[
       RowBox[{"n", " ", 
        SuperscriptBox[
         RowBox[{"x", "[", "n", "]"}], 
         RowBox[{"-", "n"}]], " ", 
        RowBox[{"(", 
         RowBox[{"1", "+", 
          SuperscriptBox[
           RowBox[{"x", "[", "n", "]"}], "n"]}], ")"}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", 
           FractionBox[
            RowBox[{
             SubscriptBox["\[Beta]", "y"], " ", 
             SuperscriptBox[
              RowBox[{"x", "[", "n", "]"}], 
              RowBox[{"2", " ", "n"}]], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"Log", "[", 
                RowBox[{"x", "[", "n", "]"}], "]"}], "+", 
               FractionBox[
                RowBox[{"n", " ", 
                 RowBox[{
                  SuperscriptBox["x", "\[Prime]",
                   MultilineFunction->None], "[", "n", "]"}]}], 
                RowBox[{"x", "[", "n", "]"}]]}], ")"}]}], 
            SuperscriptBox[
             RowBox[{"(", 
              RowBox[{"1", "+", 
               SuperscriptBox[
                RowBox[{"x", "[", "n", "]"}], "n"]}], ")"}], "2"]]}], "+", 
          FractionBox[
           RowBox[{
            SubscriptBox["\[Beta]", "y"], " ", 
            SuperscriptBox[
             RowBox[{"x", "[", "n", "]"}], "n"], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"Log", "[", 
               RowBox[{"x", "[", "n", "]"}], "]"}], "+", 
              FractionBox[
               RowBox[{"n", " ", 
                RowBox[{
                 SuperscriptBox["x", "\[Prime]",
                  MultilineFunction->None], "[", "n", "]"}]}], 
               RowBox[{"x", "[", "n", "]"}]]}], ")"}]}], 
           RowBox[{"1", "+", 
            SuperscriptBox[
             RowBox[{"x", "[", "n", "]"}], "n"]}]]}], ")"}]}], 
       SubscriptBox["\[Beta]", "y"]]}], ")"}]}], 
   RowBox[{
    RowBox[{"x", "[", "n", "]"}], " ", 
    RowBox[{"(", 
     RowBox[{"1", "+", 
      SuperscriptBox[
       RowBox[{"(", 
        FractionBox[
         RowBox[{
          SubscriptBox["\[Beta]", "y"], " ", 
          SuperscriptBox[
           RowBox[{"x", "[", "n", "]"}], "n"]}], 
         RowBox[{"1", "+", 
          SuperscriptBox[
           RowBox[{"x", "[", "n", "]"}], "n"]}]], ")"}], "n"]}], 
     ")"}]}]]}]], "Output",
 CellChangeTimes->{{3.9224892586929197`*^9, 3.922489276202249*^9}, 
   3.922489313137083*^9, 3.9224894386070013`*^9, 3.922489486144065*^9, 
   3.922489684601613*^9, 3.922489991108573*^9, 3.922490038129209*^9, 
   3.922530689817778*^9, 3.9225469492080393`*^9, {3.922548575421502*^9, 
   3.92254858113447*^9}, 3.922551558542601*^9, 3.9225517156056967`*^9, 
   3.922551749620532*^9, 3.922555422382278*^9, 3.93612551636342*^9, 
   3.936125697995566*^9, 3.9361309357751102`*^9},
 CellLabel->"Out[31]=",ExpressionUUID->"736d415e-0f00-488b-bb3c-fcba03101c5b"]
}, Open  ]],

Cell[TextData[StyleBox["NOW LET\[CloseCurlyQuote]S SOLVE D/DN(RHS) FOR DX/DN \
AS FOLLOWS",
 FontWeight->"Bold"]], "Text",
 CellChangeTimes->{{3.922549095441169*^9, 
  3.9225491421742353`*^9}},ExpressionUUID->"caf0842e-5f36-4e16-8e91-\
faaf818d411a"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Expression1b", "=", 
  RowBox[{"Simplify", "[", 
   RowBox[{"Solve", "[", 
    RowBox[{
     RowBox[{"Expression1a", "==", "0"}], ",", 
     RowBox[{
      RowBox[{"x", "'"}], "[", "n", "]"}]}], "]"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.92248970307253*^9, 3.922489718317078*^9}, {
   3.922489752729199*^9, 3.92248975659019*^9}, {3.922490002167355*^9, 
   3.922490003116989*^9}, 3.922490035915566*^9, {3.9225468047268963`*^9, 
   3.9225468140899897`*^9}, {3.922546958072023*^9, 3.92254696746314*^9}},
 CellLabel->"In[32]:=",ExpressionUUID->"7aa57d04-81c9-4ee9-8ec6-f4ada6959484"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{
     SuperscriptBox["x", "\[Prime]",
      MultilineFunction->None], "[", "n", "]"}], "\[Rule]", 
    FractionBox[
     RowBox[{
      RowBox[{"x", "[", "n", "]"}], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"n", " ", 
         RowBox[{"Log", "[", 
          RowBox[{"x", "[", "n", "]"}], "]"}]}], "+", 
        RowBox[{"Log", "[", 
         FractionBox[
          RowBox[{
           SubscriptBox["\[Beta]", "y"], " ", 
           SuperscriptBox[
            RowBox[{"x", "[", "n", "]"}], "n"]}], 
          RowBox[{"1", "+", 
           SuperscriptBox[
            RowBox[{"x", "[", "n", "]"}], "n"]}]], "]"}], "+", 
        RowBox[{
         RowBox[{"Log", "[", 
          FractionBox[
           RowBox[{
            SubscriptBox["\[Beta]", "y"], " ", 
            SuperscriptBox[
             RowBox[{"x", "[", "n", "]"}], "n"]}], 
           RowBox[{"1", "+", 
            SuperscriptBox[
             RowBox[{"x", "[", "n", "]"}], "n"]}]], "]"}], " ", 
         SuperscriptBox[
          RowBox[{"x", "[", "n", "]"}], "n"]}]}], ")"}]}], 
     RowBox[{"1", "-", 
      SuperscriptBox["n", "2"], "+", 
      SuperscriptBox[
       RowBox[{"(", 
        FractionBox[
         RowBox[{
          SubscriptBox["\[Beta]", "y"], " ", 
          SuperscriptBox[
           RowBox[{"x", "[", "n", "]"}], "n"]}], 
         RowBox[{"1", "+", 
          SuperscriptBox[
           RowBox[{"x", "[", "n", "]"}], "n"]}]], ")"}], "n"], "+", 
      RowBox[{
       SuperscriptBox[
        RowBox[{"x", "[", "n", "]"}], "n"], " ", 
       RowBox[{"(", 
        RowBox[{"1", "+", 
         SuperscriptBox[
          RowBox[{"(", 
           FractionBox[
            RowBox[{
             SubscriptBox["\[Beta]", "y"], " ", 
             SuperscriptBox[
              RowBox[{"x", "[", "n", "]"}], "n"]}], 
            RowBox[{"1", "+", 
             SuperscriptBox[
              RowBox[{"x", "[", "n", "]"}], "n"]}]], ")"}], "n"]}], 
        ")"}]}]}]]}], "}"}], "}"}]], "Output",
 CellChangeTimes->{
  3.922489719643358*^9, 3.922489757197*^9, 3.922490039862274*^9, 
   3.922530689852717*^9, {3.922546807302973*^9, 3.922546814956761*^9}, 
   3.922546970480253*^9, 3.922548581177837*^9, 3.9225515585668573`*^9, 
   3.922551715626128*^9, 3.922555422471684*^9, 3.936125516522153*^9, 
   3.936125698064376*^9, 3.9361309358296347`*^9},
 CellLabel->"Out[32]=",ExpressionUUID->"09161945-dd1a-49ba-a613-a8fc76185b34"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Expression1c", "=", 
  RowBox[{
   RowBox[{
    SuperscriptBox["x", "\[Prime]",
     MultilineFunction->None], "[", "n", "]"}], "/.", 
   RowBox[{"Expression1b", "[", 
    RowBox[{"[", "1", "]"}], "]"}]}]}]], "Input",
 CellChangeTimes->{{3.922553398503973*^9, 3.922553404796792*^9}},
 CellLabel->"In[33]:=",ExpressionUUID->"0e4d25d1-c9fe-43c2-9672-d5f84ef1a743"],

Cell[BoxData[
 FractionBox[
  RowBox[{
   RowBox[{"x", "[", "n", "]"}], " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"n", " ", 
      RowBox[{"Log", "[", 
       RowBox[{"x", "[", "n", "]"}], "]"}]}], "+", 
     RowBox[{"Log", "[", 
      FractionBox[
       RowBox[{
        SubscriptBox["\[Beta]", "y"], " ", 
        SuperscriptBox[
         RowBox[{"x", "[", "n", "]"}], "n"]}], 
       RowBox[{"1", "+", 
        SuperscriptBox[
         RowBox[{"x", "[", "n", "]"}], "n"]}]], "]"}], "+", 
     RowBox[{
      RowBox[{"Log", "[", 
       FractionBox[
        RowBox[{
         SubscriptBox["\[Beta]", "y"], " ", 
         SuperscriptBox[
          RowBox[{"x", "[", "n", "]"}], "n"]}], 
        RowBox[{"1", "+", 
         SuperscriptBox[
          RowBox[{"x", "[", "n", "]"}], "n"]}]], "]"}], " ", 
      SuperscriptBox[
       RowBox[{"x", "[", "n", "]"}], "n"]}]}], ")"}]}], 
  RowBox[{"1", "-", 
   SuperscriptBox["n", "2"], "+", 
   SuperscriptBox[
    RowBox[{"(", 
     FractionBox[
      RowBox[{
       SubscriptBox["\[Beta]", "y"], " ", 
       SuperscriptBox[
        RowBox[{"x", "[", "n", "]"}], "n"]}], 
      RowBox[{"1", "+", 
       SuperscriptBox[
        RowBox[{"x", "[", "n", "]"}], "n"]}]], ")"}], "n"], "+", 
   RowBox[{
    SuperscriptBox[
     RowBox[{"x", "[", "n", "]"}], "n"], " ", 
    RowBox[{"(", 
     RowBox[{"1", "+", 
      SuperscriptBox[
       RowBox[{"(", 
        FractionBox[
         RowBox[{
          SubscriptBox["\[Beta]", "y"], " ", 
          SuperscriptBox[
           RowBox[{"x", "[", "n", "]"}], "n"]}], 
         RowBox[{"1", "+", 
          SuperscriptBox[
           RowBox[{"x", "[", "n", "]"}], "n"]}]], ")"}], "n"]}], 
     ")"}]}]}]]], "Output",
 CellChangeTimes->{3.922555422475885*^9, 3.936125516524708*^9, 
  3.9361256980669947`*^9, 3.936130935832917*^9},
 CellLabel->"Out[33]=",ExpressionUUID->"df435ffc-0e53-47e8-b859-83890d432816"]
}, Open  ]],

Cell[TextData[StyleBox["FINALLY LET\[CloseCurlyQuote]S NORMALISE TO GET THE \
SENSITIVITY FUNCTION S_N(XSS)",
 FontWeight->"Bold"]], "Text",
 CellChangeTimes->{{3.922549155199765*^9, 3.922549160760949*^9}, {
  3.9225492479376583`*^9, 3.922549253678101*^9}, {3.92254960454329*^9, 
  3.922549604746871*^9}},ExpressionUUID->"4c0fa073-2396-429a-9666-\
91f27cfc6ee5"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Expression1d", "=", 
  RowBox[{"Simplify", "[", 
   RowBox[{"Expression1c", "*", 
    FractionBox["n", 
     RowBox[{"x", "[", "n", "]"}]]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.922546982530208*^9, 3.922547019914332*^9}, {
  3.92254860400279*^9, 3.9225486049645*^9}, {3.922551766017735*^9, 
  3.92255176662317*^9}, {3.9225534170745707`*^9, 3.922553428817396*^9}},
 CellLabel->"In[34]:=",ExpressionUUID->"233c73ca-4c1d-4b5d-8435-fc9718042121"],

Cell[BoxData[
 FractionBox[
  RowBox[{"n", " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"n", " ", 
      RowBox[{"Log", "[", 
       RowBox[{"x", "[", "n", "]"}], "]"}]}], "+", 
     RowBox[{"Log", "[", 
      FractionBox[
       RowBox[{
        SubscriptBox["\[Beta]", "y"], " ", 
        SuperscriptBox[
         RowBox[{"x", "[", "n", "]"}], "n"]}], 
       RowBox[{"1", "+", 
        SuperscriptBox[
         RowBox[{"x", "[", "n", "]"}], "n"]}]], "]"}], "+", 
     RowBox[{
      RowBox[{"Log", "[", 
       FractionBox[
        RowBox[{
         SubscriptBox["\[Beta]", "y"], " ", 
         SuperscriptBox[
          RowBox[{"x", "[", "n", "]"}], "n"]}], 
        RowBox[{"1", "+", 
         SuperscriptBox[
          RowBox[{"x", "[", "n", "]"}], "n"]}]], "]"}], " ", 
      SuperscriptBox[
       RowBox[{"x", "[", "n", "]"}], "n"]}]}], ")"}]}], 
  RowBox[{"1", "-", 
   SuperscriptBox["n", "2"], "+", 
   SuperscriptBox[
    RowBox[{"(", 
     FractionBox[
      RowBox[{
       SubscriptBox["\[Beta]", "y"], " ", 
       SuperscriptBox[
        RowBox[{"x", "[", "n", "]"}], "n"]}], 
      RowBox[{"1", "+", 
       SuperscriptBox[
        RowBox[{"x", "[", "n", "]"}], "n"]}]], ")"}], "n"], "+", 
   RowBox[{
    SuperscriptBox[
     RowBox[{"x", "[", "n", "]"}], "n"], " ", 
    RowBox[{"(", 
     RowBox[{"1", "+", 
      SuperscriptBox[
       RowBox[{"(", 
        FractionBox[
         RowBox[{
          SubscriptBox["\[Beta]", "y"], " ", 
          SuperscriptBox[
           RowBox[{"x", "[", "n", "]"}], "n"]}], 
         RowBox[{"1", "+", 
          SuperscriptBox[
           RowBox[{"x", "[", "n", "]"}], "n"]}]], ")"}], "n"]}], 
     ")"}]}]}]]], "Output",
 CellChangeTimes->{
  3.9225470207023287`*^9, {3.9225485811898813`*^9, 3.922548608505395*^9}, 
   3.922551558571629*^9, 3.922551715630329*^9, 3.922551769016138*^9, 
   3.922555422490559*^9, 3.936125516540386*^9, 3.9361256980827007`*^9, 
   3.9361309358490458`*^9},
 CellLabel->"Out[34]=",ExpressionUUID->"f7462c93-a70b-4548-99af-8f4c287e77b3"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Expression1e", "=", 
  RowBox[{"Expression1d", "/.", " ", 
   RowBox[{
    RowBox[{"x", "[", "n", "]"}], "->", "x"}]}]}]], "Input",
 CellChangeTimes->{{3.936131679731451*^9, 3.9361316985970488`*^9}},
 CellLabel->"In[56]:=",ExpressionUUID->"e9ece21f-29d3-4201-b1f0-104afb21905d"],

Cell[BoxData[
 FractionBox[
  RowBox[{"n", " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"n", " ", 
      RowBox[{"Log", "[", "x", "]"}]}], "+", 
     RowBox[{"Log", "[", 
      FractionBox[
       RowBox[{
        SuperscriptBox["x", "n"], " ", 
        SubscriptBox["\[Beta]", "y"]}], 
       RowBox[{"1", "+", 
        SuperscriptBox["x", "n"]}]], "]"}], "+", 
     RowBox[{
      SuperscriptBox["x", "n"], " ", 
      RowBox[{"Log", "[", 
       FractionBox[
        RowBox[{
         SuperscriptBox["x", "n"], " ", 
         SubscriptBox["\[Beta]", "y"]}], 
        RowBox[{"1", "+", 
         SuperscriptBox["x", "n"]}]], "]"}]}]}], ")"}]}], 
  RowBox[{"1", "-", 
   SuperscriptBox["n", "2"], "+", 
   SuperscriptBox[
    RowBox[{"(", 
     FractionBox[
      RowBox[{
       SuperscriptBox["x", "n"], " ", 
       SubscriptBox["\[Beta]", "y"]}], 
      RowBox[{"1", "+", 
       SuperscriptBox["x", "n"]}]], ")"}], "n"], "+", 
   RowBox[{
    SuperscriptBox["x", "n"], " ", 
    RowBox[{"(", 
     RowBox[{"1", "+", 
      SuperscriptBox[
       RowBox[{"(", 
        FractionBox[
         RowBox[{
          SuperscriptBox["x", "n"], " ", 
          SubscriptBox["\[Beta]", "y"]}], 
         RowBox[{"1", "+", 
          SuperscriptBox["x", "n"]}]], ")"}], "n"]}], ")"}]}]}]]], "Output",
 CellChangeTimes->{{3.9361317017730207`*^9, 3.9361317307999287`*^9}},
 CellLabel->"Out[56]=",ExpressionUUID->"934545cb-8813-4061-b641-df5943094b7a"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Expression1f", "=", 
  RowBox[{"Simplify", "[", 
   RowBox[{"Expression1e", "/.", " ", 
    RowBox[{
     SuperscriptBox["x", "n"], "->", 
     FractionBox["y", 
      RowBox[{
       SubscriptBox["\[Beta]", "y"], "-", "y"}]]}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.9361253886397448`*^9, 3.9361254031430798`*^9}, 
   3.9361254778172483`*^9, {3.936131584556863*^9, 3.936131599730193*^9}, {
   3.936131707929668*^9, 3.9361317178723307`*^9}},
 CellLabel->"In[57]:=",ExpressionUUID->"31c0b85c-6760-4643-89b0-a9ed07ecfd15"],

Cell[BoxData[
 FractionBox[
  RowBox[{"n", " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{
      RowBox[{"-", "n"}], " ", "y", " ", 
      RowBox[{"Log", "[", "x", "]"}]}], "+", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"n", " ", 
         RowBox[{"Log", "[", "x", "]"}]}], "+", 
        RowBox[{"Log", "[", "y", "]"}]}], ")"}], " ", 
      SubscriptBox["\[Beta]", "y"]}]}], ")"}]}], 
  RowBox[{
   RowBox[{
    SuperscriptBox["n", "2"], " ", "y"}], "+", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{"1", "-", 
      SuperscriptBox["n", "2"], "+", 
      SuperscriptBox["y", "n"]}], ")"}], " ", 
    SubscriptBox["\[Beta]", "y"]}]}]]], "Output",
 CellChangeTimes->{
  3.9361255165427113`*^9, 3.936125698085157*^9, 3.936130935853483*^9, 
   3.9361316054377403`*^9, {3.936131718358404*^9, 3.936131732967201*^9}},
 CellLabel->"Out[57]=",ExpressionUUID->"a05eb5aa-1960-4b67-8e85-8b7034476db7"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Expression1g", "=", 
  RowBox[{"Simplify", "[", 
   RowBox[{"Expression1f", "/.", " ", 
    RowBox[{
     SuperscriptBox["y", "n"], "->", 
     FractionBox["x", 
      RowBox[{
       SubscriptBox["\[Beta]", "x"], "-", "x"}]]}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.9361316190236683`*^9, 3.9361316258305693`*^9}, {
  3.93613172398136*^9, 3.936131729475622*^9}},
 CellLabel->"In[58]:=",ExpressionUUID->"4c0d0218-9fec-49ac-b800-ec6a183f1a0a"],

Cell[BoxData[
 FractionBox[
  RowBox[{"n", " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{
      RowBox[{"-", "n"}], " ", "y", " ", 
      RowBox[{"Log", "[", "x", "]"}]}], "+", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"n", " ", 
         RowBox[{"Log", "[", "x", "]"}]}], "+", 
        RowBox[{"Log", "[", "y", "]"}]}], ")"}], " ", 
      SubscriptBox["\[Beta]", "y"]}]}], ")"}]}], 
  RowBox[{
   RowBox[{
    SuperscriptBox["n", "2"], " ", "y"}], "+", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{"1", "-", 
      SuperscriptBox["n", "2"], "+", 
      FractionBox["x", 
       RowBox[{
        RowBox[{"-", "x"}], "+", 
        SubscriptBox["\[Beta]", "x"]}]]}], ")"}], " ", 
    SubscriptBox["\[Beta]", "y"]}]}]]], "Output",
 CellChangeTimes->{
  3.936131630490546*^9, {3.93613172629783*^9, 3.936131734256074*^9}},
 CellLabel->"Out[58]=",ExpressionUUID->"ea58e9fc-36f3-4647-91d3-23bea1e7fad1"]
}, Open  ]],

Cell[TextData[StyleBox["-------------------------------------------------- \
FINDING S_BETA_X(XSS) \
--------------------------------------------------------\nLET\
\[CloseCurlyQuote]S TAKE D/DBETA_X OF BOTH SIDES. \nD/DBETA_X(LHS) = 0\n\
D/DBETA_X(RHS) = AS FOLLOWS",
 FontWeight->"Bold"]], "Text",
 CellChangeTimes->{{3.922489939547963*^9, 3.922489949200531*^9}, {
  3.9225464996055403`*^9, 3.922546500176128*^9}, {3.922548875205667*^9, 
  3.9225488787746563`*^9}, {3.9225492609717007`*^9, 3.922549261680439*^9}, {
  3.922549300886181*^9, 
  3.922549344965028*^9}},ExpressionUUID->"a23e309b-215d-43c5-bc8e-\
c91710334586"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Expression2a", "=", 
  RowBox[{"D", "[", 
   RowBox[{
    RowBox[{
     SubscriptBox["\[Beta]", "x"], "*", 
     FractionBox[
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{
         SubscriptBox["\[Beta]", "y"], " ", "*", " ", 
         FractionBox[
          SuperscriptBox[
           RowBox[{"x", "[", 
            SubscriptBox["\[Beta]", "x"], "]"}], "n"], 
          RowBox[{"1", "+", 
           SuperscriptBox[
            RowBox[{"x", "[", 
             SubscriptBox["\[Beta]", "x"], "]"}], "n"]}]]}], ")"}], "n"], 
      RowBox[{"1", "+", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{
          SubscriptBox["\[Beta]", "y"], " ", "*", " ", 
          FractionBox[
           SuperscriptBox[
            RowBox[{"x", "[", 
             SubscriptBox["\[Beta]", "x"], "]"}], "n"], 
           RowBox[{"1", "+", 
            SuperscriptBox[
             RowBox[{"x", "[", 
              SubscriptBox["\[Beta]", "x"], "]"}], "n"]}]]}], ")"}], "n"]}]], 
     "*", 
     FractionBox["1", 
      RowBox[{"x", "[", 
       SubscriptBox["\[Beta]", "x"], "]"}]]}], ",", 
    SubscriptBox["\[Beta]", "x"]}], "]"}]}]], "Input",
 CellChangeTimes->{
  3.922489498779531*^9, {3.922489538496418*^9, 3.9224895450326138`*^9}, {
   3.9224900449215803`*^9, 3.922490046947777*^9}, {3.9225451039477987`*^9, 
   3.9225451052236*^9}, 3.9225517035246973`*^9},
 CellLabel->"In[36]:=",ExpressionUUID->"1b2c21e7-b343-44dd-8fc5-f31fb042a234"],

Cell[BoxData[
 RowBox[{
  FractionBox[
   SuperscriptBox[
    RowBox[{"(", 
     FractionBox[
      RowBox[{
       SubscriptBox["\[Beta]", "y"], " ", 
       SuperscriptBox[
        RowBox[{"x", "[", 
         SubscriptBox["\[Beta]", "x"], "]"}], "n"]}], 
      RowBox[{"1", "+", 
       SuperscriptBox[
        RowBox[{"x", "[", 
         SubscriptBox["\[Beta]", "x"], "]"}], "n"]}]], ")"}], "n"], 
   RowBox[{
    RowBox[{"x", "[", 
     SubscriptBox["\[Beta]", "x"], "]"}], " ", 
    RowBox[{"(", 
     RowBox[{"1", "+", 
      SuperscriptBox[
       RowBox[{"(", 
        FractionBox[
         RowBox[{
          SubscriptBox["\[Beta]", "y"], " ", 
          SuperscriptBox[
           RowBox[{"x", "[", 
            SubscriptBox["\[Beta]", "x"], "]"}], "n"]}], 
         RowBox[{"1", "+", 
          SuperscriptBox[
           RowBox[{"x", "[", 
            SubscriptBox["\[Beta]", "x"], "]"}], "n"]}]], ")"}], "n"]}], 
     ")"}]}]], "-", 
  FractionBox[
   RowBox[{
    SubscriptBox["\[Beta]", "x"], " ", 
    SuperscriptBox[
     RowBox[{"(", 
      FractionBox[
       RowBox[{
        SubscriptBox["\[Beta]", "y"], " ", 
        SuperscriptBox[
         RowBox[{"x", "[", 
          SubscriptBox["\[Beta]", "x"], "]"}], "n"]}], 
       RowBox[{"1", "+", 
        SuperscriptBox[
         RowBox[{"x", "[", 
          SubscriptBox["\[Beta]", "x"], "]"}], "n"]}]], ")"}], "n"], " ", 
    RowBox[{
     SuperscriptBox["x", "\[Prime]",
      MultilineFunction->None], "[", 
     SubscriptBox["\[Beta]", "x"], "]"}]}], 
   RowBox[{
    SuperscriptBox[
     RowBox[{"x", "[", 
      SubscriptBox["\[Beta]", "x"], "]"}], "2"], " ", 
    RowBox[{"(", 
     RowBox[{"1", "+", 
      SuperscriptBox[
       RowBox[{"(", 
        FractionBox[
         RowBox[{
          SubscriptBox["\[Beta]", "y"], " ", 
          SuperscriptBox[
           RowBox[{"x", "[", 
            SubscriptBox["\[Beta]", "x"], "]"}], "n"]}], 
         RowBox[{"1", "+", 
          SuperscriptBox[
           RowBox[{"x", "[", 
            SubscriptBox["\[Beta]", "x"], "]"}], "n"]}]], ")"}], "n"]}], 
     ")"}]}]], "-", 
  FractionBox[
   RowBox[{"n", " ", 
    SubscriptBox["\[Beta]", "x"], " ", 
    SuperscriptBox[
     RowBox[{"(", 
      FractionBox[
       RowBox[{
        SubscriptBox["\[Beta]", "y"], " ", 
        SuperscriptBox[
         RowBox[{"x", "[", 
          SubscriptBox["\[Beta]", "x"], "]"}], "n"]}], 
       RowBox[{"1", "+", 
        SuperscriptBox[
         RowBox[{"x", "[", 
          SubscriptBox["\[Beta]", "x"], "]"}], "n"]}]], ")"}], 
     RowBox[{
      RowBox[{"-", "1"}], "+", 
      RowBox[{"2", " ", "n"}]}]], " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", 
       FractionBox[
        RowBox[{"n", " ", 
         SubscriptBox["\[Beta]", "y"], " ", 
         SuperscriptBox[
          RowBox[{"x", "[", 
           SubscriptBox["\[Beta]", "x"], "]"}], 
          RowBox[{
           RowBox[{"-", "1"}], "+", 
           RowBox[{"2", " ", "n"}]}]], " ", 
         RowBox[{
          SuperscriptBox["x", "\[Prime]",
           MultilineFunction->None], "[", 
          SubscriptBox["\[Beta]", "x"], "]"}]}], 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{"1", "+", 
           SuperscriptBox[
            RowBox[{"x", "[", 
             SubscriptBox["\[Beta]", "x"], "]"}], "n"]}], ")"}], "2"]]}], "+", 
      FractionBox[
       RowBox[{"n", " ", 
        SubscriptBox["\[Beta]", "y"], " ", 
        SuperscriptBox[
         RowBox[{"x", "[", 
          SubscriptBox["\[Beta]", "x"], "]"}], 
         RowBox[{
          RowBox[{"-", "1"}], "+", "n"}]], " ", 
        RowBox[{
         SuperscriptBox["x", "\[Prime]",
          MultilineFunction->None], "[", 
         SubscriptBox["\[Beta]", "x"], "]"}]}], 
       RowBox[{"1", "+", 
        SuperscriptBox[
         RowBox[{"x", "[", 
          SubscriptBox["\[Beta]", "x"], "]"}], "n"]}]]}], ")"}]}], 
   RowBox[{
    RowBox[{"x", "[", 
     SubscriptBox["\[Beta]", "x"], "]"}], " ", 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{"1", "+", 
       SuperscriptBox[
        RowBox[{"(", 
         FractionBox[
          RowBox[{
           SubscriptBox["\[Beta]", "y"], " ", 
           SuperscriptBox[
            RowBox[{"x", "[", 
             SubscriptBox["\[Beta]", "x"], "]"}], "n"]}], 
          RowBox[{"1", "+", 
           SuperscriptBox[
            RowBox[{"x", "[", 
             SubscriptBox["\[Beta]", "x"], "]"}], "n"]}]], ")"}], "n"]}], 
      ")"}], "2"]}]], "+", 
  FractionBox[
   RowBox[{"n", " ", 
    SubscriptBox["\[Beta]", "x"], " ", 
    SuperscriptBox[
     RowBox[{"(", 
      FractionBox[
       RowBox[{
        SubscriptBox["\[Beta]", "y"], " ", 
        SuperscriptBox[
         RowBox[{"x", "[", 
          SubscriptBox["\[Beta]", "x"], "]"}], "n"]}], 
       RowBox[{"1", "+", 
        SuperscriptBox[
         RowBox[{"x", "[", 
          SubscriptBox["\[Beta]", "x"], "]"}], "n"]}]], ")"}], 
     RowBox[{
      RowBox[{"-", "1"}], "+", "n"}]], " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", 
       FractionBox[
        RowBox[{"n", " ", 
         SubscriptBox["\[Beta]", "y"], " ", 
         SuperscriptBox[
          RowBox[{"x", "[", 
           SubscriptBox["\[Beta]", "x"], "]"}], 
          RowBox[{
           RowBox[{"-", "1"}], "+", 
           RowBox[{"2", " ", "n"}]}]], " ", 
         RowBox[{
          SuperscriptBox["x", "\[Prime]",
           MultilineFunction->None], "[", 
          SubscriptBox["\[Beta]", "x"], "]"}]}], 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{"1", "+", 
           SuperscriptBox[
            RowBox[{"x", "[", 
             SubscriptBox["\[Beta]", "x"], "]"}], "n"]}], ")"}], "2"]]}], "+", 
      FractionBox[
       RowBox[{"n", " ", 
        SubscriptBox["\[Beta]", "y"], " ", 
        SuperscriptBox[
         RowBox[{"x", "[", 
          SubscriptBox["\[Beta]", "x"], "]"}], 
         RowBox[{
          RowBox[{"-", "1"}], "+", "n"}]], " ", 
        RowBox[{
         SuperscriptBox["x", "\[Prime]",
          MultilineFunction->None], "[", 
         SubscriptBox["\[Beta]", "x"], "]"}]}], 
       RowBox[{"1", "+", 
        SuperscriptBox[
         RowBox[{"x", "[", 
          SubscriptBox["\[Beta]", "x"], "]"}], "n"]}]]}], ")"}]}], 
   RowBox[{
    RowBox[{"x", "[", 
     SubscriptBox["\[Beta]", "x"], "]"}], " ", 
    RowBox[{"(", 
     RowBox[{"1", "+", 
      SuperscriptBox[
       RowBox[{"(", 
        FractionBox[
         RowBox[{
          SubscriptBox["\[Beta]", "y"], " ", 
          SuperscriptBox[
           RowBox[{"x", "[", 
            SubscriptBox["\[Beta]", "x"], "]"}], "n"]}], 
         RowBox[{"1", "+", 
          SuperscriptBox[
           RowBox[{"x", "[", 
            SubscriptBox["\[Beta]", "x"], "]"}], "n"]}]], ")"}], "n"]}], 
     ")"}]}]]}]], "Output",
 CellChangeTimes->{3.922489499487678*^9, 3.9224895463136272`*^9, 
  3.92249004804836*^9, 3.922530689856778*^9, 3.922545105583255*^9, 
  3.922548581195314*^9, 3.9225515585816708`*^9, 3.922551715639957*^9, 
  3.922555422494145*^9, 3.93612551655836*^9, 3.9361256980878487`*^9, 
  3.936130935867977*^9},
 CellLabel->"Out[36]=",ExpressionUUID->"1a68a6f8-91fe-4669-8d43-6835d95e8d29"]
}, Open  ]],

Cell[TextData[StyleBox["NOW LET\[CloseCurlyQuote]S SOLVE D/DBETA_X(RHS) FOR \
DX/DBETA_X AS FOLLOWS",
 FontWeight->"Bold"]], "Text",
 CellChangeTimes->{{3.9225493661726007`*^9, 
  3.922549384349256*^9}},ExpressionUUID->"fed44680-93b8-427b-b680-\
5c93133eec59"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Expression2b", "=", 
  RowBox[{"Simplify", "[", 
   RowBox[{"Solve", "[", 
    RowBox[{
     RowBox[{"Expression2a", "==", "0"}], ",", 
     RowBox[{
      RowBox[{"x", "'"}], "[", 
      SubscriptBox["\[Beta]", "x"], "]"}]}], "]"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.922490055878955*^9, 3.922490065284896*^9}, {
  3.9225452792088547`*^9, 3.922545280637485*^9}, {3.922551552003915*^9, 
  3.9225515535228367`*^9}},
 CellLabel->"In[37]:=",ExpressionUUID->"21895c9c-508f-409b-b300-915f54b3d5de"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{
     SuperscriptBox["x", "\[Prime]",
      MultilineFunction->None], "[", 
     SubscriptBox["\[Beta]", "x"], "]"}], "\[Rule]", 
    FractionBox[
     RowBox[{
      RowBox[{"x", "[", 
       SubscriptBox["\[Beta]", "x"], "]"}], " ", 
      RowBox[{"(", 
       RowBox[{"1", "+", 
        SuperscriptBox[
         RowBox[{"x", "[", 
          SubscriptBox["\[Beta]", "x"], "]"}], "n"]}], ")"}], " ", 
      RowBox[{"(", 
       RowBox[{"1", "+", 
        SuperscriptBox[
         RowBox[{"(", 
          FractionBox[
           RowBox[{
            SubscriptBox["\[Beta]", "y"], " ", 
            SuperscriptBox[
             RowBox[{"x", "[", 
              SubscriptBox["\[Beta]", "x"], "]"}], "n"]}], 
           RowBox[{"1", "+", 
            SuperscriptBox[
             RowBox[{"x", "[", 
              SubscriptBox["\[Beta]", "x"], "]"}], "n"]}]], ")"}], "n"]}], 
       ")"}]}], 
     RowBox[{
      SubscriptBox["\[Beta]", "x"], " ", 
      RowBox[{"(", 
       RowBox[{"1", "-", 
        SuperscriptBox["n", "2"], "+", 
        SuperscriptBox[
         RowBox[{"(", 
          FractionBox[
           RowBox[{
            SubscriptBox["\[Beta]", "y"], " ", 
            SuperscriptBox[
             RowBox[{"x", "[", 
              SubscriptBox["\[Beta]", "x"], "]"}], "n"]}], 
           RowBox[{"1", "+", 
            SuperscriptBox[
             RowBox[{"x", "[", 
              SubscriptBox["\[Beta]", "x"], "]"}], "n"]}]], ")"}], "n"], "+", 
        
        RowBox[{
         SuperscriptBox[
          RowBox[{"x", "[", 
           SubscriptBox["\[Beta]", "x"], "]"}], "n"], " ", 
         RowBox[{"(", 
          RowBox[{"1", "+", 
           SuperscriptBox[
            RowBox[{"(", 
             FractionBox[
              RowBox[{
               SubscriptBox["\[Beta]", "y"], " ", 
               SuperscriptBox[
                RowBox[{"x", "[", 
                 SubscriptBox["\[Beta]", "x"], "]"}], "n"]}], 
              RowBox[{"1", "+", 
               SuperscriptBox[
                RowBox[{"x", "[", 
                 SubscriptBox["\[Beta]", "x"], "]"}], "n"]}]], ")"}], "n"]}], 
          ")"}]}]}], ")"}]}]]}], "}"}], "}"}]], "Output",
 CellChangeTimes->{
  3.922490065962028*^9, 3.922530689866878*^9, 3.922545290140359*^9, 
   3.9225485812064*^9, {3.9225515539228563`*^9, 3.922551558591384*^9}, 
   3.922551715661685*^9, 3.922555422520589*^9, 3.936125516583872*^9, 
   3.9361256981129293`*^9, 3.936130935884994*^9},
 CellLabel->"Out[37]=",ExpressionUUID->"b63b5e45-c803-42f3-8afd-a0b22fa08d71"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Expression2c", "=", 
  RowBox[{
   RowBox[{
    RowBox[{"x", "'"}], "[", 
    SubscriptBox["\[Beta]", "x"], "]"}], "/.", 
   RowBox[{"Expression2b", "[", 
    RowBox[{"[", "1", "]"}], "]"}]}]}]], "Input",
 CellChangeTimes->{{3.9225543801700697`*^9, 3.922554390402054*^9}},
 CellLabel->"In[38]:=",ExpressionUUID->"83ba0b05-f64b-4778-8555-363f30cf0bf6"],

Cell[BoxData[
 FractionBox[
  RowBox[{
   RowBox[{"x", "[", 
    SubscriptBox["\[Beta]", "x"], "]"}], " ", 
   RowBox[{"(", 
    RowBox[{"1", "+", 
     SuperscriptBox[
      RowBox[{"x", "[", 
       SubscriptBox["\[Beta]", "x"], "]"}], "n"]}], ")"}], " ", 
   RowBox[{"(", 
    RowBox[{"1", "+", 
     SuperscriptBox[
      RowBox[{"(", 
       FractionBox[
        RowBox[{
         SubscriptBox["\[Beta]", "y"], " ", 
         SuperscriptBox[
          RowBox[{"x", "[", 
           SubscriptBox["\[Beta]", "x"], "]"}], "n"]}], 
        RowBox[{"1", "+", 
         SuperscriptBox[
          RowBox[{"x", "[", 
           SubscriptBox["\[Beta]", "x"], "]"}], "n"]}]], ")"}], "n"]}], 
    ")"}]}], 
  RowBox[{
   SubscriptBox["\[Beta]", "x"], " ", 
   RowBox[{"(", 
    RowBox[{"1", "-", 
     SuperscriptBox["n", "2"], "+", 
     SuperscriptBox[
      RowBox[{"(", 
       FractionBox[
        RowBox[{
         SubscriptBox["\[Beta]", "y"], " ", 
         SuperscriptBox[
          RowBox[{"x", "[", 
           SubscriptBox["\[Beta]", "x"], "]"}], "n"]}], 
        RowBox[{"1", "+", 
         SuperscriptBox[
          RowBox[{"x", "[", 
           SubscriptBox["\[Beta]", "x"], "]"}], "n"]}]], ")"}], "n"], "+", 
     RowBox[{
      SuperscriptBox[
       RowBox[{"x", "[", 
        SubscriptBox["\[Beta]", "x"], "]"}], "n"], " ", 
      RowBox[{"(", 
       RowBox[{"1", "+", 
        SuperscriptBox[
         RowBox[{"(", 
          FractionBox[
           RowBox[{
            SubscriptBox["\[Beta]", "y"], " ", 
            SuperscriptBox[
             RowBox[{"x", "[", 
              SubscriptBox["\[Beta]", "x"], "]"}], "n"]}], 
           RowBox[{"1", "+", 
            SuperscriptBox[
             RowBox[{"x", "[", 
              SubscriptBox["\[Beta]", "x"], "]"}], "n"]}]], ")"}], "n"]}], 
       ")"}]}]}], ")"}]}]]], "Output",
 CellChangeTimes->{3.92255542252343*^9, 3.936125516588089*^9, 
  3.93612569811537*^9, 3.936130935887356*^9},
 CellLabel->"Out[38]=",ExpressionUUID->"106ea3cf-bb6a-4772-a31e-c5f8583d40c6"]
}, Open  ]],

Cell[TextData[StyleBox["FINALLY LET\[CloseCurlyQuote]S NORMALISE TO GET THE \
SENSITIVITY FUNCTION S_BETA_X(XSS)",
 FontWeight->"Bold"]], "Text",
 CellChangeTimes->{
  3.922549446874288*^9, {3.922549597361219*^9, 
   3.9225495983525*^9}},ExpressionUUID->"f5d28051-3ef0-4930-baac-\
663c01c3c750"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Expression2d", "=", 
  RowBox[{"Simplify", "[", 
   RowBox[{"Expression2c", "*", 
    FractionBox[
     SubscriptBox["\[Beta]", "x"], 
     RowBox[{"x", "[", 
      SubscriptBox["\[Beta]", "x"], "]"}]]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.9225452944142036`*^9, 3.922545316246786*^9}, {
   3.9225463157720633`*^9, 3.922546317984734*^9}, {3.922546356038134*^9, 
   3.9225463599904633`*^9}, {3.922546409682043*^9, 3.922546413031192*^9}, 
   3.9225465372602043`*^9, 3.9225466129362173`*^9, {3.922551787244657*^9, 
   3.922551787813816*^9}, {3.922554665533751*^9, 3.922554669227137*^9}},
 CellLabel->"In[39]:=",ExpressionUUID->"ee2e710c-7ce6-4b3d-abe0-d48964ee7d38"],

Cell[BoxData[
 FractionBox[
  RowBox[{
   RowBox[{"(", 
    RowBox[{"1", "+", 
     SuperscriptBox[
      RowBox[{"x", "[", 
       SubscriptBox["\[Beta]", "x"], "]"}], "n"]}], ")"}], " ", 
   RowBox[{"(", 
    RowBox[{"1", "+", 
     SuperscriptBox[
      RowBox[{"(", 
       FractionBox[
        RowBox[{
         SubscriptBox["\[Beta]", "y"], " ", 
         SuperscriptBox[
          RowBox[{"x", "[", 
           SubscriptBox["\[Beta]", "x"], "]"}], "n"]}], 
        RowBox[{"1", "+", 
         SuperscriptBox[
          RowBox[{"x", "[", 
           SubscriptBox["\[Beta]", "x"], "]"}], "n"]}]], ")"}], "n"]}], 
    ")"}]}], 
  RowBox[{"1", "-", 
   SuperscriptBox["n", "2"], "+", 
   SuperscriptBox[
    RowBox[{"(", 
     FractionBox[
      RowBox[{
       SubscriptBox["\[Beta]", "y"], " ", 
       SuperscriptBox[
        RowBox[{"x", "[", 
         SubscriptBox["\[Beta]", "x"], "]"}], "n"]}], 
      RowBox[{"1", "+", 
       SuperscriptBox[
        RowBox[{"x", "[", 
         SubscriptBox["\[Beta]", "x"], "]"}], "n"]}]], ")"}], "n"], "+", 
   RowBox[{
    SuperscriptBox[
     RowBox[{"x", "[", 
      SubscriptBox["\[Beta]", "x"], "]"}], "n"], " ", 
    RowBox[{"(", 
     RowBox[{"1", "+", 
      SuperscriptBox[
       RowBox[{"(", 
        FractionBox[
         RowBox[{
          SubscriptBox["\[Beta]", "y"], " ", 
          SuperscriptBox[
           RowBox[{"x", "[", 
            SubscriptBox["\[Beta]", "x"], "]"}], "n"]}], 
         RowBox[{"1", "+", 
          SuperscriptBox[
           RowBox[{"x", "[", 
            SubscriptBox["\[Beta]", "x"], "]"}], "n"]}]], ")"}], "n"]}], 
     ")"}]}]}]]], "Output",
 CellChangeTimes->{{3.922545296160021*^9, 3.922545316763691*^9}, 
   3.922546319501466*^9, 3.9225463605286503`*^9, 3.9225464156175833`*^9, 
   3.922546538512168*^9, 3.922546614060305*^9, 3.922548581210322*^9, 
   3.922551558601429*^9, 3.922551715666395*^9, 3.922551789802327*^9, 
   3.9225554225364237`*^9, 3.936125516601179*^9, 3.936125698128777*^9, 
   3.93613093590165*^9},
 CellLabel->"Out[39]=",ExpressionUUID->"3ecd1830-c383-4bdf-bd31-60724e35d1db"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Expression2e", "=", 
  RowBox[{"Expression2d", "/.", " ", 
   RowBox[{
    RowBox[{"x", "[", 
     SubscriptBox["\[Beta]", "x"], "]"}], "->", "x"}]}]}]], "Input",
 CellChangeTimes->{
  3.936130917534025*^9, {3.93613117104456*^9, 3.93613125062772*^9}, {
   3.9361317628447*^9, 3.936131782776829*^9}},
 CellLabel->"In[60]:=",ExpressionUUID->"79b01836-4c47-4a66-99aa-26d4fec78c6a"],

Cell[BoxData[
 FractionBox[
  RowBox[{
   RowBox[{"(", 
    RowBox[{"1", "+", 
     SuperscriptBox["x", "n"]}], ")"}], " ", 
   RowBox[{"(", 
    RowBox[{"1", "+", 
     SuperscriptBox[
      RowBox[{"(", 
       FractionBox[
        RowBox[{
         SuperscriptBox["x", "n"], " ", 
         SubscriptBox["\[Beta]", "y"]}], 
        RowBox[{"1", "+", 
         SuperscriptBox["x", "n"]}]], ")"}], "n"]}], ")"}]}], 
  RowBox[{"1", "-", 
   SuperscriptBox["n", "2"], "+", 
   SuperscriptBox[
    RowBox[{"(", 
     FractionBox[
      RowBox[{
       SuperscriptBox["x", "n"], " ", 
       SubscriptBox["\[Beta]", "y"]}], 
      RowBox[{"1", "+", 
       SuperscriptBox["x", "n"]}]], ")"}], "n"], "+", 
   RowBox[{
    SuperscriptBox["x", "n"], " ", 
    RowBox[{"(", 
     RowBox[{"1", "+", 
      SuperscriptBox[
       RowBox[{"(", 
        FractionBox[
         RowBox[{
          SuperscriptBox["x", "n"], " ", 
          SubscriptBox["\[Beta]", "y"]}], 
         RowBox[{"1", "+", 
          SuperscriptBox["x", "n"]}]], ")"}], "n"]}], ")"}]}]}]]], "Output",
 CellChangeTimes->{
  3.9361309359124823`*^9, 3.9361312109657497`*^9, 3.936131251812389*^9, {
   3.936131770280406*^9, 3.936131783309723*^9}},
 CellLabel->"Out[60]=",ExpressionUUID->"a3b73ac5-e0ac-44c5-93f7-620827711c79"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Expression2f", "=", 
  RowBox[{"Simplify", "[", 
   RowBox[{"Expression2e", "/.", " ", 
    RowBox[{
     SuperscriptBox["x", "n"], "->", 
     FractionBox["y", 
      RowBox[{
       SubscriptBox["\[Beta]", "y"], "-", "y"}]]}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.936131262353208*^9, 3.936131286305683*^9}, {
  3.9361318064458237`*^9, 3.936131810738655*^9}},
 CellLabel->"In[61]:=",ExpressionUUID->"2e92fc23-e01c-4295-847f-05ebe7658d70"],

Cell[BoxData[
 FractionBox[
  RowBox[{
   RowBox[{"(", 
    RowBox[{"1", "+", 
     SuperscriptBox["y", "n"]}], ")"}], " ", 
   SubscriptBox["\[Beta]", "y"]}], 
  RowBox[{
   RowBox[{
    SuperscriptBox["n", "2"], " ", "y"}], "+", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{"1", "-", 
      SuperscriptBox["n", "2"], "+", 
      SuperscriptBox["y", "n"]}], ")"}], " ", 
    SubscriptBox["\[Beta]", "y"]}]}]]], "Output",
 CellChangeTimes->{3.936131287331657*^9, 3.9361318112424097`*^9},
 CellLabel->"Out[61]=",ExpressionUUID->"57e8b300-d5fb-4f24-8508-ae61943d4a01"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Expression2g", "=", 
  RowBox[{"Simplify", "[", 
   RowBox[{"Expression2f", "/.", " ", 
    RowBox[{
     SuperscriptBox["y", "n"], "->", 
     FractionBox["x", 
      RowBox[{
       SubscriptBox["\[Beta]", "x"], "-", "x"}]]}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.936131828206051*^9, 3.93613183139049*^9}},
 CellLabel->"In[62]:=",ExpressionUUID->"2ea941fa-26a8-4600-b396-810c5e86f295"],

Cell[BoxData[
 FractionBox[
  RowBox[{
   SubscriptBox["\[Beta]", "x"], " ", 
   SubscriptBox["\[Beta]", "y"]}], 
  RowBox[{
   RowBox[{
    SuperscriptBox["n", "2"], " ", "x", " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", "y"}], "+", 
      SubscriptBox["\[Beta]", "y"]}], ")"}]}], "+", 
   RowBox[{
    SubscriptBox["\[Beta]", "x"], " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       SuperscriptBox["n", "2"], " ", "y"}], "-", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1"}], "+", 
         SuperscriptBox["n", "2"]}], ")"}], " ", 
       SubscriptBox["\[Beta]", "y"]}]}], ")"}]}]}]]], "Output",
 CellChangeTimes->{3.936131834594674*^9},
 CellLabel->"Out[62]=",ExpressionUUID->"ffe9115d-5942-4336-98a1-eddce9d66ab2"]
}, Open  ]],

Cell[TextData[StyleBox["-------------------------------------------------- \
FINDING S_BETA_Y(XSS) \
--------------------------------------------------------\nLET\
\[CloseCurlyQuote]S TAKE D/DBETA_Y OF BOTH SIDES. \nD/DBETA_Y(LHS) = 0\n\
D/DBETA_Y(RHS) = AS FOLLOWS",
 FontWeight->"Bold"]], "Text",
 CellChangeTimes->{{3.922489956735157*^9, 3.92248996123357*^9}, {
  3.9225464430842648`*^9, 3.9225464569937277`*^9}, {3.9225488873268137`*^9, 
  3.92254888904408*^9}, {3.922549517732052*^9, 
  3.9225495497387037`*^9}},ExpressionUUID->"775395d9-ad5a-4962-b2ec-\
425237798b4d"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Expression3a", "=", 
  RowBox[{"D", "[", 
   RowBox[{
    RowBox[{
     SubscriptBox["\[Beta]", "x"], "*", 
     FractionBox[
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{
         SubscriptBox["\[Beta]", "y"], " ", "*", " ", 
         FractionBox[
          SuperscriptBox[
           RowBox[{"x", "[", 
            SubscriptBox["\[Beta]", "y"], "]"}], "n"], 
          RowBox[{"1", "+", 
           SuperscriptBox[
            RowBox[{"x", "[", 
             SubscriptBox["\[Beta]", "y"], "]"}], "n"]}]]}], ")"}], "n"], 
      RowBox[{"1", "+", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{
          SubscriptBox["\[Beta]", "y"], " ", "*", " ", 
          FractionBox[
           SuperscriptBox[
            RowBox[{"x", "[", 
             SubscriptBox["\[Beta]", "y"], "]"}], "n"], 
           RowBox[{"1", "+", 
            SuperscriptBox[
             RowBox[{"x", "[", 
              SubscriptBox["\[Beta]", "y"], "]"}], "n"]}]]}], ")"}], "n"]}]], 
     "*", 
     FractionBox["1", 
      RowBox[{"x", "[", 
       SubscriptBox["\[Beta]", "y"], "]"}]]}], ",", 
    SubscriptBox["\[Beta]", "y"]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.92248955714859*^9, 3.922489567996751*^9}, {
   3.922490089315975*^9, 3.922490091476594*^9}, 3.922546839333473*^9, {
   3.9225516775968113`*^9, 3.9225516830930347`*^9}},
 CellLabel->"In[42]:=",ExpressionUUID->"dce42101-7133-415b-88d0-5f9bc1c7f939"],

Cell[BoxData[
 RowBox[{
  RowBox[{"-", 
   FractionBox[
    RowBox[{
     SubscriptBox["\[Beta]", "x"], " ", 
     SuperscriptBox[
      RowBox[{"(", 
       FractionBox[
        RowBox[{
         SubscriptBox["\[Beta]", "y"], " ", 
         SuperscriptBox[
          RowBox[{"x", "[", 
           SubscriptBox["\[Beta]", "y"], "]"}], "n"]}], 
        RowBox[{"1", "+", 
         SuperscriptBox[
          RowBox[{"x", "[", 
           SubscriptBox["\[Beta]", "y"], "]"}], "n"]}]], ")"}], "n"], " ", 
     RowBox[{
      SuperscriptBox["x", "\[Prime]",
       MultilineFunction->None], "[", 
      SubscriptBox["\[Beta]", "y"], "]"}]}], 
    RowBox[{
     SuperscriptBox[
      RowBox[{"x", "[", 
       SubscriptBox["\[Beta]", "y"], "]"}], "2"], " ", 
     RowBox[{"(", 
      RowBox[{"1", "+", 
       SuperscriptBox[
        RowBox[{"(", 
         FractionBox[
          RowBox[{
           SubscriptBox["\[Beta]", "y"], " ", 
           SuperscriptBox[
            RowBox[{"x", "[", 
             SubscriptBox["\[Beta]", "y"], "]"}], "n"]}], 
          RowBox[{"1", "+", 
           SuperscriptBox[
            RowBox[{"x", "[", 
             SubscriptBox["\[Beta]", "y"], "]"}], "n"]}]], ")"}], "n"]}], 
      ")"}]}]]}], "-", 
  FractionBox[
   RowBox[{"n", " ", 
    SubscriptBox["\[Beta]", "x"], " ", 
    SuperscriptBox[
     RowBox[{"(", 
      FractionBox[
       RowBox[{
        SubscriptBox["\[Beta]", "y"], " ", 
        SuperscriptBox[
         RowBox[{"x", "[", 
          SubscriptBox["\[Beta]", "y"], "]"}], "n"]}], 
       RowBox[{"1", "+", 
        SuperscriptBox[
         RowBox[{"x", "[", 
          SubscriptBox["\[Beta]", "y"], "]"}], "n"]}]], ")"}], 
     RowBox[{
      RowBox[{"-", "1"}], "+", 
      RowBox[{"2", " ", "n"}]}]], " ", 
    RowBox[{"(", 
     RowBox[{
      FractionBox[
       SuperscriptBox[
        RowBox[{"x", "[", 
         SubscriptBox["\[Beta]", "y"], "]"}], "n"], 
       RowBox[{"1", "+", 
        SuperscriptBox[
         RowBox[{"x", "[", 
          SubscriptBox["\[Beta]", "y"], "]"}], "n"]}]], "-", 
      FractionBox[
       RowBox[{"n", " ", 
        SubscriptBox["\[Beta]", "y"], " ", 
        SuperscriptBox[
         RowBox[{"x", "[", 
          SubscriptBox["\[Beta]", "y"], "]"}], 
         RowBox[{
          RowBox[{"-", "1"}], "+", 
          RowBox[{"2", " ", "n"}]}]], " ", 
        RowBox[{
         SuperscriptBox["x", "\[Prime]",
          MultilineFunction->None], "[", 
         SubscriptBox["\[Beta]", "y"], "]"}]}], 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"1", "+", 
          SuperscriptBox[
           RowBox[{"x", "[", 
            SubscriptBox["\[Beta]", "y"], "]"}], "n"]}], ")"}], "2"]], "+", 
      FractionBox[
       RowBox[{"n", " ", 
        SubscriptBox["\[Beta]", "y"], " ", 
        SuperscriptBox[
         RowBox[{"x", "[", 
          SubscriptBox["\[Beta]", "y"], "]"}], 
         RowBox[{
          RowBox[{"-", "1"}], "+", "n"}]], " ", 
        RowBox[{
         SuperscriptBox["x", "\[Prime]",
          MultilineFunction->None], "[", 
         SubscriptBox["\[Beta]", "y"], "]"}]}], 
       RowBox[{"1", "+", 
        SuperscriptBox[
         RowBox[{"x", "[", 
          SubscriptBox["\[Beta]", "y"], "]"}], "n"]}]]}], ")"}]}], 
   RowBox[{
    RowBox[{"x", "[", 
     SubscriptBox["\[Beta]", "y"], "]"}], " ", 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{"1", "+", 
       SuperscriptBox[
        RowBox[{"(", 
         FractionBox[
          RowBox[{
           SubscriptBox["\[Beta]", "y"], " ", 
           SuperscriptBox[
            RowBox[{"x", "[", 
             SubscriptBox["\[Beta]", "y"], "]"}], "n"]}], 
          RowBox[{"1", "+", 
           SuperscriptBox[
            RowBox[{"x", "[", 
             SubscriptBox["\[Beta]", "y"], "]"}], "n"]}]], ")"}], "n"]}], 
      ")"}], "2"]}]], "+", 
  FractionBox[
   RowBox[{"n", " ", 
    SubscriptBox["\[Beta]", "x"], " ", 
    SuperscriptBox[
     RowBox[{"(", 
      FractionBox[
       RowBox[{
        SubscriptBox["\[Beta]", "y"], " ", 
        SuperscriptBox[
         RowBox[{"x", "[", 
          SubscriptBox["\[Beta]", "y"], "]"}], "n"]}], 
       RowBox[{"1", "+", 
        SuperscriptBox[
         RowBox[{"x", "[", 
          SubscriptBox["\[Beta]", "y"], "]"}], "n"]}]], ")"}], 
     RowBox[{
      RowBox[{"-", "1"}], "+", "n"}]], " ", 
    RowBox[{"(", 
     RowBox[{
      FractionBox[
       SuperscriptBox[
        RowBox[{"x", "[", 
         SubscriptBox["\[Beta]", "y"], "]"}], "n"], 
       RowBox[{"1", "+", 
        SuperscriptBox[
         RowBox[{"x", "[", 
          SubscriptBox["\[Beta]", "y"], "]"}], "n"]}]], "-", 
      FractionBox[
       RowBox[{"n", " ", 
        SubscriptBox["\[Beta]", "y"], " ", 
        SuperscriptBox[
         RowBox[{"x", "[", 
          SubscriptBox["\[Beta]", "y"], "]"}], 
         RowBox[{
          RowBox[{"-", "1"}], "+", 
          RowBox[{"2", " ", "n"}]}]], " ", 
        RowBox[{
         SuperscriptBox["x", "\[Prime]",
          MultilineFunction->None], "[", 
         SubscriptBox["\[Beta]", "y"], "]"}]}], 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"1", "+", 
          SuperscriptBox[
           RowBox[{"x", "[", 
            SubscriptBox["\[Beta]", "y"], "]"}], "n"]}], ")"}], "2"]], "+", 
      FractionBox[
       RowBox[{"n", " ", 
        SubscriptBox["\[Beta]", "y"], " ", 
        SuperscriptBox[
         RowBox[{"x", "[", 
          SubscriptBox["\[Beta]", "y"], "]"}], 
         RowBox[{
          RowBox[{"-", "1"}], "+", "n"}]], " ", 
        RowBox[{
         SuperscriptBox["x", "\[Prime]",
          MultilineFunction->None], "[", 
         SubscriptBox["\[Beta]", "y"], "]"}]}], 
       RowBox[{"1", "+", 
        SuperscriptBox[
         RowBox[{"x", "[", 
          SubscriptBox["\[Beta]", "y"], "]"}], "n"]}]]}], ")"}]}], 
   RowBox[{
    RowBox[{"x", "[", 
     SubscriptBox["\[Beta]", "y"], "]"}], " ", 
    RowBox[{"(", 
     RowBox[{"1", "+", 
      SuperscriptBox[
       RowBox[{"(", 
        FractionBox[
         RowBox[{
          SubscriptBox["\[Beta]", "y"], " ", 
          SuperscriptBox[
           RowBox[{"x", "[", 
            SubscriptBox["\[Beta]", "y"], "]"}], "n"]}], 
         RowBox[{"1", "+", 
          SuperscriptBox[
           RowBox[{"x", "[", 
            SubscriptBox["\[Beta]", "y"], "]"}], "n"]}]], ")"}], "n"]}], 
     ")"}]}]]}]], "Output",
 CellChangeTimes->{3.9224895723152237`*^9, 3.922490095111112*^9, 
  3.922530689870222*^9, 3.92254684250311*^9, 3.922548581220002*^9, 
  3.922551558604486*^9, 3.9225517156776047`*^9, 3.922555422539562*^9, 
  3.9361255166210938`*^9, 3.9361256981452503`*^9, 3.936130935915351*^9},
 CellLabel->"Out[42]=",ExpressionUUID->"6850f5bb-7261-4749-8be6-00a943fee6b7"]
}, Open  ]],

Cell[TextData[StyleBox["NOW LET\[CloseCurlyQuote]S SOLVE D/DBETA_Y(RHS) FOR \
DX/DBETA_Y AS FOLLOWS",
 FontWeight->"Bold"]], "Text",
 CellChangeTimes->{{3.9225495659254932`*^9, 
  3.922549571786457*^9}},ExpressionUUID->"9214caeb-1903-4315-8321-\
fabd7531548b"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Expression3b", "=", 
  RowBox[{"Simplify", "[", 
   RowBox[{"Solve", "[", 
    RowBox[{
     RowBox[{"Expression3a", "==", "0"}], ",", 
     RowBox[{
      RowBox[{"x", "'"}], "[", 
      SubscriptBox["\[Beta]", "y"], "]"}]}], "]"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.922490102288505*^9, 3.922490106662898*^9}, {
  3.9225468556183643`*^9, 3.92254686335635*^9}},
 CellLabel->"In[43]:=",ExpressionUUID->"b856fe83-19a6-4dbb-bfb4-25697d755248"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{
     SuperscriptBox["x", "\[Prime]",
      MultilineFunction->None], "[", 
     SubscriptBox["\[Beta]", "y"], "]"}], "\[Rule]", 
    FractionBox[
     RowBox[{"n", " ", 
      RowBox[{"x", "[", 
       SubscriptBox["\[Beta]", "y"], "]"}], " ", 
      RowBox[{"(", 
       RowBox[{"1", "+", 
        SuperscriptBox[
         RowBox[{"x", "[", 
          SubscriptBox["\[Beta]", "y"], "]"}], "n"]}], ")"}]}], 
     RowBox[{
      SubscriptBox["\[Beta]", "y"], " ", 
      RowBox[{"(", 
       RowBox[{"1", "-", 
        SuperscriptBox["n", "2"], "+", 
        SuperscriptBox[
         RowBox[{"(", 
          FractionBox[
           RowBox[{
            SubscriptBox["\[Beta]", "y"], " ", 
            SuperscriptBox[
             RowBox[{"x", "[", 
              SubscriptBox["\[Beta]", "y"], "]"}], "n"]}], 
           RowBox[{"1", "+", 
            SuperscriptBox[
             RowBox[{"x", "[", 
              SubscriptBox["\[Beta]", "y"], "]"}], "n"]}]], ")"}], "n"], "+", 
        
        RowBox[{
         SuperscriptBox[
          RowBox[{"x", "[", 
           SubscriptBox["\[Beta]", "y"], "]"}], "n"], " ", 
         RowBox[{"(", 
          RowBox[{"1", "+", 
           SuperscriptBox[
            RowBox[{"(", 
             FractionBox[
              RowBox[{
               SubscriptBox["\[Beta]", "y"], " ", 
               SuperscriptBox[
                RowBox[{"x", "[", 
                 SubscriptBox["\[Beta]", "y"], "]"}], "n"]}], 
              RowBox[{"1", "+", 
               SuperscriptBox[
                RowBox[{"x", "[", 
                 SubscriptBox["\[Beta]", "y"], "]"}], "n"]}]], ")"}], "n"]}], 
          ")"}]}]}], ")"}]}]]}], "}"}], "}"}]], "Output",
 CellChangeTimes->{3.922490107292069*^9, 3.922530689880888*^9, 
  3.922546864636573*^9, 3.922548581223338*^9, 3.922551558612986*^9, 
  3.922551715699183*^9, 3.9225554225649757`*^9, 3.936125516649781*^9, 
  3.9361256981693697`*^9, 3.936130935940682*^9},
 CellLabel->"Out[43]=",ExpressionUUID->"d96903fc-88b7-49bb-b173-769b0767f7a8"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Expression3c", "=", 
  RowBox[{
   RowBox[{
    RowBox[{"x", "'"}], "[", 
    SubscriptBox["\[Beta]", "y"], "]"}], "/.", 
   RowBox[{"Expression3b", "[", 
    RowBox[{"[", "1", "]"}], "]"}]}]}]], "Input",
 CellChangeTimes->{{3.922555259049474*^9, 3.9225552680374527`*^9}},
 CellLabel->"In[64]:=",ExpressionUUID->"5cae315f-f276-4d98-ac95-f7caee281a1e"],

Cell[BoxData[
 FractionBox[
  RowBox[{"n", " ", 
   RowBox[{"x", "[", 
    SubscriptBox["\[Beta]", "y"], "]"}], " ", 
   RowBox[{"(", 
    RowBox[{"1", "+", 
     SuperscriptBox[
      RowBox[{"x", "[", 
       SubscriptBox["\[Beta]", "y"], "]"}], "n"]}], ")"}]}], 
  RowBox[{
   SubscriptBox["\[Beta]", "y"], " ", 
   RowBox[{"(", 
    RowBox[{"1", "-", 
     SuperscriptBox["n", "2"], "+", 
     SuperscriptBox[
      RowBox[{"(", 
       FractionBox[
        RowBox[{
         SubscriptBox["\[Beta]", "y"], " ", 
         SuperscriptBox[
          RowBox[{"x", "[", 
           SubscriptBox["\[Beta]", "y"], "]"}], "n"]}], 
        RowBox[{"1", "+", 
         SuperscriptBox[
          RowBox[{"x", "[", 
           SubscriptBox["\[Beta]", "y"], "]"}], "n"]}]], ")"}], "n"], "+", 
     RowBox[{
      SuperscriptBox[
       RowBox[{"x", "[", 
        SubscriptBox["\[Beta]", "y"], "]"}], "n"], " ", 
      RowBox[{"(", 
       RowBox[{"1", "+", 
        SuperscriptBox[
         RowBox[{"(", 
          FractionBox[
           RowBox[{
            SubscriptBox["\[Beta]", "y"], " ", 
            SuperscriptBox[
             RowBox[{"x", "[", 
              SubscriptBox["\[Beta]", "y"], "]"}], "n"]}], 
           RowBox[{"1", "+", 
            SuperscriptBox[
             RowBox[{"x", "[", 
              SubscriptBox["\[Beta]", "y"], "]"}], "n"]}]], ")"}], "n"]}], 
       ")"}]}]}], ")"}]}]]], "Output",
 CellChangeTimes->{3.922555422567396*^9, 3.936125516652155*^9, 
  3.936125698171603*^9, 3.936130935942979*^9, 3.936132059124935*^9},
 CellLabel->"Out[64]=",ExpressionUUID->"544d2ca4-2d7f-4c55-9ec3-6421c389e242"]
}, Open  ]],

Cell[TextData[{
 StyleBox["FINALLY LET\[CloseCurlyQuote]S NORMALISE TO GET THE SENSITIVITY \
FUNCTION",
  FontWeight->"Bold"],
 " ",
 StyleBox["S_BETA_Y(XSS)",
  FontWeight->"Bold"]
}], "Text",
 CellChangeTimes->{{3.9225495833876753`*^9, 
  3.9225495918796673`*^9}},ExpressionUUID->"e8296c50-8a34-4313-959b-\
774d8b38f910"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Expression3d", "=", 
  RowBox[{"Simplify", "[", 
   RowBox[{"Expression3c", "*", 
    FractionBox[
     SubscriptBox["\[Beta]", "y"], 
     RowBox[{"x", "[", 
      SubscriptBox["\[Beta]", "y"], "]"}]]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.922546884312483*^9, 3.9225469101553497`*^9}, {
  3.9225518074937897`*^9, 3.922551807800786*^9}, {3.922555272822204*^9, 
  3.922555276944935*^9}, {3.936132045380394*^9, 3.9361320454442997`*^9}},
 CellLabel->"In[65]:=",ExpressionUUID->"10db3687-307b-4398-bcac-8e22d3878e69"],

Cell[BoxData[
 FractionBox[
  RowBox[{"n", " ", 
   RowBox[{"(", 
    RowBox[{"1", "+", 
     SuperscriptBox[
      RowBox[{"x", "[", 
       SubscriptBox["\[Beta]", "y"], "]"}], "n"]}], ")"}]}], 
  RowBox[{"1", "-", 
   SuperscriptBox["n", "2"], "+", 
   SuperscriptBox[
    RowBox[{"(", 
     FractionBox[
      RowBox[{
       SubscriptBox["\[Beta]", "y"], " ", 
       SuperscriptBox[
        RowBox[{"x", "[", 
         SubscriptBox["\[Beta]", "y"], "]"}], "n"]}], 
      RowBox[{"1", "+", 
       SuperscriptBox[
        RowBox[{"x", "[", 
         SubscriptBox["\[Beta]", "y"], "]"}], "n"]}]], ")"}], "n"], "+", 
   RowBox[{
    SuperscriptBox[
     RowBox[{"x", "[", 
      SubscriptBox["\[Beta]", "y"], "]"}], "n"], " ", 
    RowBox[{"(", 
     RowBox[{"1", "+", 
      SuperscriptBox[
       RowBox[{"(", 
        FractionBox[
         RowBox[{
          SubscriptBox["\[Beta]", "y"], " ", 
          SuperscriptBox[
           RowBox[{"x", "[", 
            SubscriptBox["\[Beta]", "y"], "]"}], "n"]}], 
         RowBox[{"1", "+", 
          SuperscriptBox[
           RowBox[{"x", "[", 
            SubscriptBox["\[Beta]", "y"], "]"}], "n"]}]], ")"}], "n"]}], 
     ")"}]}]}]]], "Output",
 CellChangeTimes->{
  3.9225469107028112`*^9, 3.922548581231619*^9, 3.922551558615554*^9, 
   3.922551715701936*^9, 3.922551808561861*^9, 3.92255542257687*^9, 
   3.9361255166617823`*^9, 3.9361256981802177`*^9, 3.9361309359517527`*^9, {
   3.9361320509474277`*^9, 3.936132060540762*^9}},
 CellLabel->"Out[65]=",ExpressionUUID->"50b4108f-fc9e-4b7f-87cd-4e291eb45a60"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Expression3e", "=", 
  RowBox[{"Expression3d", "/.", " ", 
   RowBox[{
    RowBox[{"x", "[", 
     SubscriptBox["\[Beta]", "y"], "]"}], "->", "x"}]}]}]], "Input",
 CellChangeTimes->{{3.936125490010665*^9, 3.936125507448379*^9}, 
   3.9361256834944887`*^9, {3.936125906988863*^9, 3.936125907141458*^9}, {
   3.9361322118918*^9, 3.936132222246258*^9}},
 CellLabel->"In[66]:=",ExpressionUUID->"3d2e64d1-42a4-4c15-8472-606292f8c4a2"],

Cell[BoxData[
 FractionBox[
  RowBox[{"n", " ", 
   RowBox[{"(", 
    RowBox[{"1", "+", 
     SuperscriptBox["x", "n"]}], ")"}]}], 
  RowBox[{"1", "-", 
   SuperscriptBox["n", "2"], "+", 
   SuperscriptBox[
    RowBox[{"(", 
     FractionBox[
      RowBox[{
       SuperscriptBox["x", "n"], " ", 
       SubscriptBox["\[Beta]", "y"]}], 
      RowBox[{"1", "+", 
       SuperscriptBox["x", "n"]}]], ")"}], "n"], "+", 
   RowBox[{
    SuperscriptBox["x", "n"], " ", 
    RowBox[{"(", 
     RowBox[{"1", "+", 
      SuperscriptBox[
       RowBox[{"(", 
        FractionBox[
         RowBox[{
          SuperscriptBox["x", "n"], " ", 
          SubscriptBox["\[Beta]", "y"]}], 
         RowBox[{"1", "+", 
          SuperscriptBox["x", "n"]}]], ")"}], "n"]}], ")"}]}]}]]], "Output",
 CellChangeTimes->{3.9361255166641283`*^9, 3.9361256981835613`*^9, 
  3.9361259086631937`*^9, 3.936130935954137*^9, 3.93613222392083*^9},
 CellLabel->"Out[66]=",ExpressionUUID->"512813f7-11d3-4542-9d37-d26489368052"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Expression3f", "=", 
  RowBox[{"Simplify", "[", 
   RowBox[{"Expression3e", "/.", " ", 
    RowBox[{
     SuperscriptBox["x", "n"], "->", 
     FractionBox["y", 
      RowBox[{
       SubscriptBox["\[Beta]", "y"], "-", "y"}]]}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.936132235271793*^9, 3.93613223906068*^9}},
 CellLabel->"In[67]:=",ExpressionUUID->"7796c618-49e6-4d68-abba-3466b257dba7"],

Cell[BoxData[
 FractionBox[
  RowBox[{"n", " ", 
   SubscriptBox["\[Beta]", "y"]}], 
  RowBox[{
   RowBox[{
    SuperscriptBox["n", "2"], " ", "y"}], "+", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{"1", "-", 
      SuperscriptBox["n", "2"], "+", 
      SuperscriptBox["y", "n"]}], ")"}], " ", 
    SubscriptBox["\[Beta]", "y"]}]}]]], "Output",
 CellChangeTimes->{3.936132242172551*^9},
 CellLabel->"Out[67]=",ExpressionUUID->"82ef28d4-cd22-4b6a-bb1f-71e11b3ec651"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Expression3g", "=", 
  RowBox[{"Simplify", "[", 
   RowBox[{"Expression3f", "/.", " ", 
    RowBox[{
     SuperscriptBox["y", "n"], "->", 
     FractionBox["x", 
      RowBox[{
       SubscriptBox["\[Beta]", "x"], "-", "x"}]]}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.936132254784485*^9, 3.936132258741696*^9}},
 CellLabel->"In[68]:=",ExpressionUUID->"df8f0a2a-fb71-4a37-a624-e059958f21bf"],

Cell[BoxData[
 FractionBox[
  RowBox[{"n", " ", 
   SubscriptBox["\[Beta]", "y"]}], 
  RowBox[{
   RowBox[{
    SuperscriptBox["n", "2"], " ", "y"}], "+", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{"1", "-", 
      SuperscriptBox["n", "2"], "+", 
      FractionBox["x", 
       RowBox[{
        RowBox[{"-", "x"}], "+", 
        SubscriptBox["\[Beta]", "x"]}]]}], ")"}], " ", 
    SubscriptBox["\[Beta]", "y"]}]}]]], "Output",
 CellChangeTimes->{3.936132262529606*^9},
 CellLabel->"Out[68]=",ExpressionUUID->"3375d684-21e9-489b-af29-0ef2a35604f4"]
}, Open  ]]
}, Open  ]]
},
WindowSize->{1512, 916},
WindowMargins->{{0, Automatic}, {Automatic, 0}},
TaggingRules-><|"TryRealOnly" -> False|>,
Magnification->1.25,
FrontEndVersion->"13.3 for Mac OS X ARM (64-bit) (July 24, 2023)",
StyleDefinitions->"Default.nb",
ExpressionUUID->"f78edb90-cb7a-45c0-8e2d-4406616ca18c"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 276, 6, 200, "Title",ExpressionUUID->"fd71f539-8e10-4828-88cc-f34dcb481165"],
Cell[859, 30, 117408, 1935, 236, "Text",ExpressionUUID->"ad1ae7bc-589e-4353-9015-b47aa5cf5486"],
Cell[118270, 1967, 595, 10, 131, "Text",ExpressionUUID->"6866f1ec-91fb-46a1-9982-94b7ce5fae68"],
Cell[CellGroupData[{
Cell[118890, 1981, 1474, 36, 95, "Input",ExpressionUUID->"e563f891-29e0-455a-aad1-d20a488e94eb"],
Cell[120367, 2019, 7735, 226, 374, "Output",ExpressionUUID->"736d415e-0f00-488b-bb3c-fcba03101c5b"]
}, Open  ]],
Cell[128117, 2248, 250, 5, 44, "Text",ExpressionUUID->"caf0842e-5f36-4e16-8e91-faaf818d411a"],
Cell[CellGroupData[{
Cell[128392, 2257, 608, 12, 37, "Input",ExpressionUUID->"7aa57d04-81c9-4ee9-8ec6-f4ada6959484"],
Cell[129003, 2271, 2484, 70, 104, "Output",ExpressionUUID->"09161945-dd1a-49ba-a613-a8fc76185b34"]
}, Open  ]],
Cell[CellGroupData[{
Cell[131524, 2346, 386, 9, 37, "Input",ExpressionUUID->"0e4d25d1-c9fe-43c2-9672-d5f84ef1a743"],
Cell[131913, 2357, 1906, 60, 104, "Output",ExpressionUUID->"df435ffc-0e53-47e8-b859-83890d432816"]
}, Open  ]],
Cell[133834, 2420, 362, 6, 44, "Text",ExpressionUUID->"4c0fa073-2396-429a-9666-91f27cfc6ee5"],
Cell[CellGroupData[{
Cell[134221, 2430, 471, 9, 57, "Input",ExpressionUUID->"233c73ca-4c1d-4b5d-8435-fc9718042121"],
Cell[134695, 2441, 2029, 62, 104, "Output",ExpressionUUID->"f7462c93-a70b-4548-99af-8f4c287e77b3"]
}, Open  ]],
Cell[CellGroupData[{
Cell[136761, 2508, 302, 6, 37, "Input",ExpressionUUID->"e9ece21f-29d3-4201-b1f0-104afb21905d"],
Cell[137066, 2516, 1447, 46, 104, "Output",ExpressionUUID->"934545cb-8813-4061-b641-df5943094b7a"]
}, Open  ]],
Cell[CellGroupData[{
Cell[138550, 2567, 548, 12, 60, "Input",ExpressionUUID->"31c0b85c-6760-4643-89b0-a9ed07ecfd15"],
Cell[139101, 2581, 915, 27, 72, "Output",ExpressionUUID->"a05eb5aa-1960-4b67-8e85-8b7034476db7"]
}, Open  ]],
Cell[CellGroupData[{
Cell[140053, 2613, 470, 11, 57, "Input",ExpressionUUID->"4c0d0218-9fec-49ac-b800-ec6a183f1a0a"],
Cell[140526, 2626, 923, 29, 81, "Output",ExpressionUUID->"ea58e9fc-36f3-4647-91d3-23bea1e7fad1"]
}, Open  ]],
Cell[141464, 2658, 623, 11, 131, "Text",ExpressionUUID->"a23e309b-215d-43c5-bc8e-c91710334586"],
Cell[CellGroupData[{
Cell[142112, 2673, 1476, 41, 95, "Input",ExpressionUUID->"1b2c21e7-b343-44dd-8fc5-f31fb042a234"],
Cell[143591, 2716, 7185, 224, 210, "Output",ExpressionUUID->"1a68a6f8-91fe-4669-8d43-6835d95e8d29"]
}, Open  ]],
Cell[150791, 2943, 260, 5, 44, "Text",ExpressionUUID->"fed44680-93b8-427b-b680-5c93133eec59"],
Cell[CellGroupData[{
Cell[151076, 2952, 523, 12, 37, "Input",ExpressionUUID->"21895c9c-508f-409b-b300-915f54b3d5de"],
Cell[151602, 2966, 2596, 74, 105, "Output",ExpressionUUID->"b63b5e45-c803-42f3-8afd-a0b22fa08d71"]
}, Open  ]],
Cell[CellGroupData[{
Cell[154235, 3045, 375, 9, 37, "Input",ExpressionUUID->"83ba0b05-f64b-4778-8555-363f30cf0bf6"],
Cell[154613, 3056, 2034, 63, 105, "Output",ExpressionUUID->"106ea3cf-bb6a-4772-a31e-c5f8583d40c6"]
}, Open  ]],
Cell[156662, 3122, 295, 6, 44, "Text",ExpressionUUID->"f5d28051-3ef0-4930-baac-663c01c3c750"],
Cell[CellGroupData[{
Cell[156982, 3132, 692, 13, 60, "Input",ExpressionUUID->"ee2e710c-7ce6-4b3d-abe0-d48964ee7d38"],
Cell[157677, 3147, 2091, 62, 105, "Output",ExpressionUUID->"3ecd1830-c383-4bdf-bd31-60724e35d1db"]
}, Open  ]],
Cell[CellGroupData[{
Cell[159805, 3214, 402, 9, 37, "Input",ExpressionUUID->"79b01836-4c47-4a66-99aa-26d4fec78c6a"],
Cell[160210, 3225, 1284, 41, 105, "Output",ExpressionUUID->"a3b73ac5-e0ac-44c5-93f7-620827711c79"]
}, Open  ]],
Cell[CellGroupData[{
Cell[161531, 3271, 469, 11, 60, "Input",ExpressionUUID->"2e92fc23-e01c-4295-847f-05ebe7658d70"],
Cell[162003, 3284, 565, 17, 72, "Output",ExpressionUUID->"57e8b300-d5fb-4f24-8508-ae61943d4a01"]
}, Open  ]],
Cell[CellGroupData[{
Cell[162605, 3306, 417, 10, 57, "Input",ExpressionUUID->"2ea941fa-26a8-4600-b396-810c5e86f295"],
Cell[163025, 3318, 772, 25, 69, "Output",ExpressionUUID->"ffe9115d-5942-4336-98a1-eddce9d66ab2"]
}, Open  ]],
Cell[163812, 3346, 574, 10, 131, "Text",ExpressionUUID->"775395d9-ad5a-4962-b2ec-425237798b4d"],
Cell[CellGroupData[{
Cell[164411, 3360, 1448, 40, 107, "Input",ExpressionUUID->"dce42101-7133-415b-88d0-5f9bc1c7f939"],
Cell[165862, 3402, 6738, 207, 217, "Output",ExpressionUUID->"6850f5bb-7261-4749-8be6-00a943fee6b7"]
}, Open  ]],
Cell[172615, 3612, 260, 5, 44, "Text",ExpressionUUID->"9214caeb-1903-4315-8321-fabd7531548b"],
Cell[CellGroupData[{
Cell[172900, 3621, 471, 11, 40, "Input",ExpressionUUID->"b856fe83-19a6-4dbb-bfb4-25697d755248"],
Cell[173374, 3634, 2088, 58, 91, "Output",ExpressionUUID->"d96903fc-88b7-49bb-b173-769b0767f7a8"]
}, Open  ]],
Cell[CellGroupData[{
Cell[175499, 3697, 375, 9, 40, "Input",ExpressionUUID->"5cae315f-f276-4d98-ac95-f7caee281a1e"],
Cell[175877, 3708, 1623, 48, 91, "Output",ExpressionUUID->"544d2ca4-2d7f-4c55-9ec3-6421c389e242"]
}, Open  ]],
Cell[177515, 3759, 323, 10, 44, "Text",ExpressionUUID->"e8296c50-8a34-4313-959b-774d8b38f910"],
Cell[CellGroupData[{
Cell[177863, 3773, 542, 11, 67, "Input",ExpressionUUID->"10db3687-307b-4398-bcac-8e22d3878e69"],
Cell[178408, 3786, 1567, 46, 91, "Output",ExpressionUUID->"50b4108f-fc9e-4b7f-87cd-4e291eb45a60"]
}, Open  ]],
Cell[CellGroupData[{
Cell[180012, 3837, 453, 9, 40, "Input",ExpressionUUID->"3d2e64d1-42a4-4c15-8472-606292f8c4a2"],
Cell[180468, 3848, 995, 30, 88, "Output",ExpressionUUID->"512813f7-11d3-4542-9d37-d26489368052"]
}, Open  ]],
Cell[CellGroupData[{
Cell[181500, 3883, 417, 10, 60, "Input",ExpressionUUID->"7796c618-49e6-4d68-abba-3466b257dba7"],
Cell[181920, 3895, 465, 14, 69, "Output",ExpressionUUID->"82ef28d4-cd22-4b6a-bb1f-71e11b3ec651"]
}, Open  ]],
Cell[CellGroupData[{
Cell[182422, 3914, 418, 10, 57, "Input",ExpressionUUID->"df8f0a2a-fb71-4a37-a624-e059958f21bf"],
Cell[182843, 3926, 548, 17, 78, "Output",ExpressionUUID->"3375d684-21e9-489b-af29-0ef2a35604f4"]
}, Open  ]]
}, Open  ]]
}
]
*)

